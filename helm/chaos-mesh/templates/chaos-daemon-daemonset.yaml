# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: {{ .Release.Namespace | quote }}
  name: chaos-daemon
  labels:
    app.kubernetes.io/component: chaos-daemon
    {{- include "chaos-mesh.labels" . | nindent 4 }}
spec:
  {{- if .Values.chaosDaemon.updateStrategy }}
  updateStrategy:
{{ toYaml .Values.chaosDaemon.updateStrategy | indent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chaos-mesh.selectors" . | nindent 6 }}
      app.kubernetes.io/component: chaos-daemon
  template:
    metadata:
      labels:
        {{- include "chaos-mesh.labels" . | nindent 8 }}
        app.kubernetes.io/component: chaos-daemon
      annotations:
        {{- /* it requires to reload the latest re-generated certs for mtls after helm upgrade*/}}
        {{- if .Values.chaosDaemon.mtls.enabled }}
        rollme: {{ randAlphaNum 5 | quote }}
        {{- end }}
    {{- with .Values.chaosDaemon.podAnnotations }}
{{ toYaml . | indent 8 }}
    {{- end }}
    spec:
      {{- if .Values.chaosDaemon.hostNetwork }}
      hostNetwork: true
      {{- end }}
      {{- if .Values.chaosDaemon.serviceAccount }}
      serviceAccountName: {{ .Values.chaosDaemon.serviceAccount }}
      {{- end }}
      hostPID: true
      {{- if .Values.chaosDaemon.priorityClassName }}
      priorityClassName: {{ .Values.chaosDaemon.priorityClassName }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- if .Values.chaosDaemon.securityContext }}
      securityContext: {{ toYaml .Values.chaosDaemon.securityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: chaos-daemon
          image: {{template "chaos-daemon.image" . }}
          imagePullPolicy: {{ .Values.chaosDaemon.imagePullPolicy | default "IfNotPresent" }}
          {{- if .Values.chaosDaemon.resources }}
          resources:
{{ toYaml .Values.chaosDaemon.resources | indent 12 }}
          {{- end }}
          command:
            - /usr/local/bin/chaos-daemon
            - --runtime
            - {{ .Values.chaosDaemon.runtime }}
            - --http-port
            - !!str {{ .Values.chaosDaemon.httpPort }}
            - --grpc-port
            - !!str {{ .Values.chaosDaemon.grpcPort }}
          {{- if .Values.enableProfiling }}
            - --pprof
          {{- end }}
          {{- if .Values.chaosDaemon.mtls.enabled }}
            - --ca
            - /etc/chaos-daemon/cert/ca.crt
            - --cert
            - /etc/chaos-daemon/cert/tls.crt
            - --key
            - /etc/chaos-daemon/cert/tls.key
          {{- end }}
            - --runtime-socket-path
        {{- if .Values.chaosDaemon.socketPath }}
            - /host-run/{{ .Values.chaosDaemon.socketPath | base }}
        {{- else }}
          {{- if eq .Values.chaosDaemon.runtime "docker" }}
            - /host-run/docker.sock
          {{- else if eq .Values.chaosDaemon.runtime "containerd" }}
            - /host-run/containerd.sock
          {{- else if eq .Values.chaosDaemon.runtime "crio" }}
            - /host-run/crio.sock
          {{- end }}
        {{- end }}
          env:
            {{- if .Values.chaosDaemon.env }}
            {{- include "chaos-mesh.helpers.listEnvVars" .Values.chaosDaemon | trim | nindent 12 }}
            {{- end }}
            {{- if not .Values.chaosDaemon.env.TZ }}
            - name: TZ
              value: {{ .Values.timezone | default "UTC" }}
            {{- end }}
          securityContext:
            {{- if .Values.chaosDaemon.privileged }}
            privileged: true
            capabilities:
              add:
                - SYS_PTRACE
            {{- else }}
            capabilities:
{{ toYaml .Values.chaosDaemon.capabilities | indent 14 }}
            {{- end }}
          volumeMounts:
            - name: socket-path
              mountPath: /host-run
            - name: sys-path
              mountPath: /host-sys
            - name: lib-modules
              mountPath: /lib/modules
            {{- if .Values.chaosDaemon.mtls.enabled}}
            - name: chaos-daemon-cert
              mountPath: /etc/chaos-daemon/cert
              readOnly: true
            {{- end }}
          ports:
            - name: grpc
              containerPort: {{ .Values.chaosDaemon.grpcPort }}
            - name: http
              containerPort: {{ .Values.chaosDaemon.httpPort }}
{{- if .Values.bpfki.create }}
        - name: bpfki
          image: {{template "chaos-kernel.image" . }}
          imagePullPolicy: {{ .Values.bpfki.imagePullPolicy | default "IfNotPresent" }}
          {{- if .Values.bpfki.resources }}
          resources:
{{ toYaml .Values.bpfki.resources | indent 12 }}
          {{- end }}
          command:
            - /usr/local/bin/bpfki
            - -port
            - !!str {{ .Values.bpfki.grpcPort }}
          securityContext:
            privileged: true
          volumeMounts:
            - name: localtime-path
              mountPath: /etc/localtime
              readOnly: true
            - name: modules-path
              mountPath: /lib/modules
              readOnly: true
            - name: src-path
              mountPath: /usr/src
              readOnly: true
          ports:
            - name: grpc
              containerPort: {{ .Values.bpfki.grpcPort }}
{{- end }}
        {{- if .Values.chaosDlv.enable }}
        - name: chaos-mesh-dlv
          image: {{template "chaos-dlv.image" . }}
          imagePullPolicy: {{ .Values.chaosDlv.imagePullPolicy | default "IfNotPresent" }}
          env:
            - name: CMD_NAME
              value: chaos-daemon
          securityContext:
            capabilities:
              add:
              - SYS_PTRACE
          ports:
          - name: dlv
            containerPort: 8000
        {{- end }}
      volumes:
        - name: socket-path
          hostPath:
            path: {{template "chaos-daemon.socket-path" . }}
        - name: sys-path
          hostPath:
            path: /sys
        - name: lib-modules
          hostPath:
            path: /lib/modules
        {{- if .Values.chaosDaemon.mtls.enabled}}
        - name: chaos-daemon-cert
          secret:
            secretName:  {{ template "chaos-mesh.daemon.certs" . }}
        {{- end }}
{{- if .Values.bpfki.create }}
        - name: localtime-path
          hostPath:
            path: /etc/localtime
        - name: modules-path
          hostPath:
            path: /lib/modules
        - name: src-path
          hostPath:
            path: /usr/src
{{- end }}
      {{- with .Values.chaosDaemon.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.chaosDaemon.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.chaosDaemon.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
