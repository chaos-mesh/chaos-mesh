---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: gcpchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: GCPChaos
    listKind: GCPChaosList
    plural: gcpchaos
    singular: gcpchaos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.action
      name: action
      type: string
    - jsonPath: .spec.duration
      name: duration
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GCPChaos is the Schema for the gcpchaos API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GCPChaosSpec is the content of the specification for a GCPChaos
            properties:
              action:
                description: |-
                  Action defines the specific gcp chaos action.
                  Supported action: node-stop / node-reset / disk-loss
                  Default action: node-stop
                enum:
                - node-stop
                - node-reset
                - disk-loss
                type: string
              deviceNames:
                description: |-
                  The device name of disks to detach.
                  Needed in disk-loss.
                items:
                  type: string
                type: array
              duration:
                description: Duration represents the duration of the chaos action.
                type: string
              instance:
                description: Instance defines the name of the instance
                type: string
              project:
                description: Project defines the ID of gcp project.
                type: string
              remoteCluster:
                description: RemoteCluster represents the remote cluster where the
                  chaos will be deployed
                type: string
              secretName:
                description: SecretName defines the name of kubernetes secret. It
                  is used for GCP credentials.
                type: string
              zone:
                description: Zone defines the zone of gcp project.
                type: string
            required:
            - action
            - instance
            - project
            - zone
            type: object
          status:
            description: GCPChaosStatus represents the status of a GCPChaos
            properties:
              attachedDiskStrings:
                description: |-
                  The attached disk info strings.
                  Needed in disk-loss.
                items:
                  type: string
                type: array
              conditions:
                description: Conditions represents the current global condition of
                  the chaos
                items:
                  properties:
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              experiment:
                description: Experiment records the last experiment state.
                properties:
                  containerRecords:
                    description: Records are used to track the running status
                    items:
                      properties:
                        events:
                          description: Events are the essential details about the
                            injections and recoveries
                          items:
                            properties:
                              message:
                                description: Message is the detail message, e.g. the
                                  reason why we failed to inject the chaos
                                type: string
                              operation:
                                description: Operation represents the operation we
                                  are doing, when we crate this event
                                type: string
                              timestamp:
                                description: Timestamp is time when we create this
                                  event
                                format: date-time
                                type: string
                              type:
                                description: Type means the stage of this event
                                type: string
                            required:
                            - operation
                            - timestamp
                            - type
                            type: object
                          type: array
                        id:
                          type: string
                        injectedCount:
                          description: InjectedCount is a counter to record the sum
                            of successful injections
                          type: integer
                        phase:
                          type: string
                        recoveredCount:
                          description: RecoveredCount is a counter to record the sum
                            of successful recoveries
                          type: integer
                        selectorKey:
                          type: string
                      required:
                      - id
                      - injectedCount
                      - phase
                      - recoveredCount
                      - selectorKey
                      type: object
                    type: array
                  desiredPhase:
                    enum:
                    - Run
                    - Stop
                    type: string
                type: object
            required:
            - experiment
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
