name: Upload Image for PR

on:
  issue_comment:
    types: [created]

permissions: read-all

jobs:
  build-for-pr:
    runs-on: ubuntu-22.04
    if: ${{ github.event.issue.pull_request && startsWith( github.event.comment.body, '/build-image') }}
    steps:
      - uses: actions/checkout@v4

      - name: Install jq
        run: |
          sudo apt-get install jq -y

      - name: Cache docker image and go
        uses: actions/cache@v2
        with:
          path: |
            cache
          key: chaos-mesh-build-${{ github.event.issue.number }}

      - name: Enable docker builder
        run: |
          DOCKER_CLI_EXPERIMENTAL=enabled docker buildx create --use --name chaos-mesh-builder

      - name: Build Chaos Mesh Build Env
        env:
          IMAGE_BUILD_ENV_BUILD: ${{ contains(github.event.pull_request.labels.*.name, 'rebuild-build-env-image') }}
        run: |
          if [ "${IMAGE_BUILD_ENV_BUILD}" = "true" ] ; then
            export IMAGE_BUILD_ENV_BUILD=1;
          else
            export IMAGE_BUILD_ENV_BUILD=0;
          fi

          make \
            DOCKER_CACHE=1 \
            DOCKER_CACHE_DIR=$GITHUB_WORKSPACE/cache \
            GO_BUILD_CACHE=$GITHUB_WORKSPACE/cache \
            image-build-env

      - name: Build Chaos Mesh Dev Env
        env:
          IMAGE_DEV_ENV_BUILD: ${{ contains(github.event.pull_request.labels.*.name, 'rebuild-dev-env-image') }}
        run: |
          if [ "${IMAGE_DEV_ENV_BUILD}" = "true" ] ; then
            export IMAGE_DEV_ENV_BUILD=1;
          else
            export IMAGE_DEV_ENV_BUILD=0;
          fi

          make \
            DOCKER_CACHE=1 \
            DOCKER_CACHE_DIR=$GITHUB_WORKSPACE/cache \
            GO_BUILD_CACHE=$GITHUB_WORKSPACE/cache \
            image-dev-env

      - name: Build Chaos Mesh
        run: |
          make \
            IMAGE_TAG=latest \
            UI=1 \
            DOCKER_CACHE=1 \
            DOCKER_CACHE_DIR=$GITHUB_WORKSPACE/cache \
            GO_BUILD_CACHE=$GITHUB_WORKSPACE/cache \
            image

          for IMAGE in "chaos-mesh" "chaos-daemon" "chaos-dashboard"
          do
            docker image save ghcr.io/chaos-mesh/$IMAGE > $IMAGE.tar
          done

      - name: Upload Chaos Mesh Image to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chaos-mesh-images
          path: |
            *.tar

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            You can download and import the image with following commands:

            ```bash
            ./hack/download-image.sh -r ${{ github.repository }} -i ${{ github.run_id }}
            ```
