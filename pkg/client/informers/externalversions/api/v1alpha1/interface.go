// Copyright Chaos Mesh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/chaos-mesh/chaos-mesh/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Awschaos returns a AWSChaosInformer.
	Awschaos() AWSChaosInformer
	// Azurechaos returns a AzureChaosInformer.
	Azurechaos() AzureChaosInformer
	// Blockchaos returns a BlockChaosInformer.
	Blockchaos() BlockChaosInformer
	// Gcpchaos returns a GCPChaosInformer.
	Gcpchaos() GCPChaosInformer
	// Httpchaos returns a HTTPChaosInformer.
	Httpchaos() HTTPChaosInformer
	// Iochaos returns a IOChaosInformer.
	Iochaos() IOChaosInformer
	// Jvmchaos returns a JVMChaosInformer.
	Jvmchaos() JVMChaosInformer
	// Kernelchaos returns a KernelChaosInformer.
	Kernelchaos() KernelChaosInformer
	// Networkchaos returns a NetworkChaosInformer.
	Networkchaos() NetworkChaosInformer
	// Podchaos returns a PodChaosInformer.
	Podchaos() PodChaosInformer
	// Podhttpchaos returns a PodHttpChaosInformer.
	Podhttpchaos() PodHttpChaosInformer
	// Podiochaos returns a PodIOChaosInformer.
	Podiochaos() PodIOChaosInformer
	// Podnetworkchaos returns a PodNetworkChaosInformer.
	Podnetworkchaos() PodNetworkChaosInformer
	// Stresschaos returns a StressChaosInformer.
	Stresschaos() StressChaosInformer
	// Timechaos returns a TimeChaosInformer.
	Timechaos() TimeChaosInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Awschaos returns a AWSChaosInformer.
func (v *version) Awschaos() AWSChaosInformer {
	return &aWSChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Azurechaos returns a AzureChaosInformer.
func (v *version) Azurechaos() AzureChaosInformer {
	return &azureChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Blockchaos returns a BlockChaosInformer.
func (v *version) Blockchaos() BlockChaosInformer {
	return &blockChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Gcpchaos returns a GCPChaosInformer.
func (v *version) Gcpchaos() GCPChaosInformer {
	return &gCPChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Httpchaos returns a HTTPChaosInformer.
func (v *version) Httpchaos() HTTPChaosInformer {
	return &hTTPChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Iochaos returns a IOChaosInformer.
func (v *version) Iochaos() IOChaosInformer {
	return &iOChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Jvmchaos returns a JVMChaosInformer.
func (v *version) Jvmchaos() JVMChaosInformer {
	return &jVMChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Kernelchaos returns a KernelChaosInformer.
func (v *version) Kernelchaos() KernelChaosInformer {
	return &kernelChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Networkchaos returns a NetworkChaosInformer.
func (v *version) Networkchaos() NetworkChaosInformer {
	return &networkChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Podchaos returns a PodChaosInformer.
func (v *version) Podchaos() PodChaosInformer {
	return &podChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Podhttpchaos returns a PodHttpChaosInformer.
func (v *version) Podhttpchaos() PodHttpChaosInformer {
	return &podHttpChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Podiochaos returns a PodIOChaosInformer.
func (v *version) Podiochaos() PodIOChaosInformer {
	return &podIOChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Podnetworkchaos returns a PodNetworkChaosInformer.
func (v *version) Podnetworkchaos() PodNetworkChaosInformer {
	return &podNetworkChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Stresschaos returns a StressChaosInformer.
func (v *version) Stresschaos() StressChaosInformer {
	return &stressChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Timechaos returns a TimeChaosInformer.
func (v *version) Timechaos() TimeChaosInformer {
	return &timeChaosInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
