// Copyright Chaos Mesh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "github.com/chaos-mesh/chaos-mesh/api/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// PodChaosLister helps list Podchaos.
// All objects returned here must be treated as read-only.
type PodChaosLister interface {
	// List lists all Podchaos in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.PodChaos, err error)
	// Podchaos returns an object that can list and get Podchaos.
	Podchaos(namespace string) PodChaosNamespaceLister
	PodChaosListerExpansion
}

// podChaosLister implements the PodChaosLister interface.
type podChaosLister struct {
	listers.ResourceIndexer[*apiv1alpha1.PodChaos]
}

// NewPodChaosLister returns a new PodChaosLister.
func NewPodChaosLister(indexer cache.Indexer) PodChaosLister {
	return &podChaosLister{listers.New[*apiv1alpha1.PodChaos](indexer, apiv1alpha1.Resource("podchaos"))}
}

// Podchaos returns an object that can list and get Podchaos.
func (s *podChaosLister) Podchaos(namespace string) PodChaosNamespaceLister {
	return podChaosNamespaceLister{listers.NewNamespaced[*apiv1alpha1.PodChaos](s.ResourceIndexer, namespace)}
}

// PodChaosNamespaceLister helps list and get Podchaos.
// All objects returned here must be treated as read-only.
type PodChaosNamespaceLister interface {
	// List lists all Podchaos in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.PodChaos, err error)
	// Get retrieves the PodChaos from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*apiv1alpha1.PodChaos, error)
	PodChaosNamespaceListerExpansion
}

// podChaosNamespaceLister implements the PodChaosNamespaceLister
// interface.
type podChaosNamespaceLister struct {
	listers.ResourceIndexer[*apiv1alpha1.PodChaos]
}
