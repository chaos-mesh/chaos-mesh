// Copyright Chaos Mesh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/chaos-mesh/chaos-mesh/api/v1alpha1"
	apiv1alpha1 "github.com/chaos-mesh/chaos-mesh/pkg/client/versioned/typed/api/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeTimechaos implements TimeChaosInterface
type fakeTimechaos struct {
	*gentype.FakeClientWithList[*v1alpha1.TimeChaos, *v1alpha1.TimeChaosList]
	Fake *FakeApiV1alpha1
}

func newFakeTimechaos(fake *FakeApiV1alpha1, namespace string) apiv1alpha1.TimeChaosInterface {
	return &fakeTimechaos{
		gentype.NewFakeClientWithList[*v1alpha1.TimeChaos, *v1alpha1.TimeChaosList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("timechaos"),
			v1alpha1.SchemeGroupVersion.WithKind("TimeChaos"),
			func() *v1alpha1.TimeChaos { return &v1alpha1.TimeChaos{} },
			func() *v1alpha1.TimeChaosList { return &v1alpha1.TimeChaosList{} },
			func(dst, src *v1alpha1.TimeChaosList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.TimeChaosList) []*v1alpha1.TimeChaos { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.TimeChaosList, items []*v1alpha1.TimeChaos) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
