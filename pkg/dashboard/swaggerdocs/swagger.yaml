basePath: /api
definitions:
  config.ChaosDashboardConfig:
    properties:
      cluster_mode:
        default: true
        description: ClusterScoped means control Chaos Object in cluster level(all
          namespace).
        type: boolean
      dns_server_create:
        default: true
        description: After v2.5, the DNS server is created by default.
        type: boolean
      enableFilterNamespace:
        default: false
        description: |-
          EnableFilterNamespace will filter namespace with annotation. Only the pods/containers in namespace
          annotated with `chaos-mesh.org/inject=enabled` will be injected.
        type: boolean
      gcp_security_mode:
        default: false
        description: GcpSecurityMode will use the gcloud authentication to login to
          GKE user
        type: boolean
      listen_host:
        default: 0.0.0.0
        type: string
      listen_port:
        default: 2333
        type: integer
      root_path:
        default: http://localhost:2333
        type: string
      security_mode:
        default: true
        description: SecurityMode will use the token login by the user if set to true
        type: boolean
      target_namespace:
        description: |-
          TargetNamespace is the target namespace to injecting chaos.
          It only works with ClusterScoped is false.
        type: string
      version:
        type: string
    type: object
  core.ConditionalBranch:
    properties:
      expression:
        type: string
      name:
        type: string
      template:
        type: string
    type: object
  core.Event:
    properties:
      created_at:
        type: string
      id:
        type: integer
      kind:
        type: string
      message:
        type: string
      name:
        type: string
      namespace:
        type: string
      object_id:
        type: string
      reason:
        type: string
      type:
        type: string
    type: object
  core.KubeObjectDesc:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/core.KubeObjectMeta'
      spec: {}
    type: object
  core.KubeObjectMeta:
    properties:
      annotations:
        additionalProperties:
          type: string
        type: object
      labels:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      namespace:
        type: string
    type: object
  core.Node:
    properties:
      conditional_branches:
        items:
          $ref: '#/definitions/core.ConditionalBranch'
        type: array
      name:
        type: string
      parallel:
        items:
          $ref: '#/definitions/core.NodeNameWithTemplate'
        type: array
      serial:
        items:
          $ref: '#/definitions/core.NodeNameWithTemplate'
        type: array
      state:
        type: string
      template:
        type: string
      type:
        type: string
      uid:
        type: string
    type: object
  core.NodeNameWithTemplate:
    properties:
      name:
        type: string
      template:
        type: string
    type: object
  core.Topology:
    properties:
      nodes:
        items:
          $ref: '#/definitions/core.Node'
        type: array
    type: object
  core.WorkflowDetail:
    properties:
      created_at:
        type: string
      end_time:
        description: EndTime represents the time when the workflow completed all steps.
        type: string
      entry:
        description: the entry node name
        type: string
      finish_time:
        description: FinishTime represents the time when the workflow was deleted
          from Kubernetes.
        type: string
      id:
        type: integer
      kube_object:
        $ref: '#/definitions/core.KubeObjectDesc'
      name:
        type: string
      namespace:
        type: string
      status:
        type: string
      topology:
        $ref: '#/definitions/core.Topology'
      uid:
        type: string
    type: object
  core.WorkflowMeta:
    properties:
      created_at:
        type: string
      end_time:
        description: EndTime represents the time when the workflow completed all steps.
        type: string
      entry:
        description: the entry node name
        type: string
      finish_time:
        description: FinishTime represents the time when the workflow was deleted
          from Kubernetes.
        type: string
      id:
        type: integer
      name:
        type: string
      namespace:
        type: string
      status:
        type: string
      uid:
        type: string
    type: object
  curl.Header:
    additionalProperties:
      items:
        type: string
      type: array
    type: object
  curl.RequestForm:
    properties:
      body:
        type: string
      followLocation:
        type: boolean
      header:
        $ref: '#/definitions/curl.Header'
      jsonContent:
        type: boolean
      method:
        type: string
      name:
        type: string
      url:
        type: string
    type: object
  http.Header:
    additionalProperties:
      items:
        type: string
      type: array
    type: object
  intstr.IntOrString:
    properties:
      intVal:
        type: integer
      strVal:
        type: string
      type:
        type: integer
    type: object
  resource.Quantity:
    properties:
      Format:
        type: string
    type: object
  status.AllChaosStatus:
    properties:
      deleting:
        type: integer
      finished:
        type: integer
      injecting:
        type: integer
      paused:
        type: integer
      running:
        type: integer
    type: object
  types.Archive:
    properties:
      created_at:
        type: string
      kind:
        type: string
      name:
        type: string
      namespace:
        type: string
      uid:
        type: string
    type: object
  types.ArchiveDetail:
    properties:
      created_at:
        type: string
      kind:
        type: string
      kube_object:
        $ref: '#/definitions/core.KubeObjectDesc'
      name:
        type: string
      namespace:
        type: string
      uid:
        type: string
    type: object
  types.Experiment:
    properties:
      created_at:
        type: string
      failed_message:
        type: string
      kind:
        type: string
      name:
        type: string
      namespace:
        type: string
      status:
        type: string
      uid:
        type: string
    type: object
  types.ExperimentDetail:
    properties:
      created_at:
        type: string
      failed_message:
        type: string
      kind:
        type: string
      kube_object:
        $ref: '#/definitions/core.KubeObjectDesc'
      name:
        type: string
      namespace:
        type: string
      status:
        type: string
      uid:
        type: string
    type: object
  types.PhysicalMachine:
    properties:
      address:
        type: string
      name:
        type: string
      namespace:
        type: string
    type: object
  types.Pod:
    properties:
      ip:
        type: string
      name:
        type: string
      namespace:
        type: string
      state:
        type: string
    type: object
  types.Schedule:
    properties:
      created_at:
        type: string
      kind:
        type: string
      name:
        type: string
      namespace:
        type: string
      status:
        type: string
      uid:
        type: string
    type: object
  types.ScheduleDetail:
    properties:
      created_at:
        type: string
      experiment_uids:
        items:
          type: string
        type: array
      kind:
        type: string
      kube_object:
        $ref: '#/definitions/core.KubeObjectDesc'
      name:
        type: string
      namespace:
        type: string
      status:
        type: string
      uid:
        type: string
    type: object
  types.StatusCheckTemplate:
    properties:
      description:
        type: string
      name:
        type: string
      namespace:
        type: string
      spec:
        $ref: '#/definitions/v1alpha1.StatusCheckTemplate'
    type: object
  types.StatusCheckTemplateBase:
    properties:
      created_at:
        type: string
      description:
        type: string
      name:
        type: string
      namespace:
        type: string
      uid:
        type: string
    type: object
  types.StatusCheckTemplateDetail:
    properties:
      created_at:
        type: string
      description:
        type: string
      name:
        type: string
      namespace:
        type: string
      spec:
        $ref: '#/definitions/v1alpha1.StatusCheckTemplate'
      uid:
        type: string
    type: object
  utils.APIError:
    properties:
      code:
        type: integer
      full_text:
        type: string
      message:
        type: string
      type:
        type: string
    type: object
  utils.MapStringSliceResponse:
    additionalProperties:
      items:
        type: string
      type: array
    type: object
  utils.Response:
    properties:
      status:
        type: string
    type: object
  v1.AWSElasticBlockStoreVolumeSource:
    properties:
      fsType:
        description: |-
          fsType is the filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      partition:
        description: |-
          partition is the partition in the volume that you want to mount.
          If omitted, the default is to mount by volume name.
          Examples: For volume /dev/sda1, you specify the partition as "1".
          Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
          +optional
        type: integer
      readOnly:
        description: |-
          readOnly value true will force the readOnly setting in VolumeMounts.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          +optional
        type: boolean
      volumeID:
        description: |-
          volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
        type: string
    type: object
  v1.AzureDiskVolumeSource:
    properties:
      cachingMode:
        description: |-
          cachingMode is the Host Caching mode: None, Read Only, Read Write.
          +optional
        type: string
      diskName:
        description: diskName is the Name of the data disk in the blob storage
        type: string
      diskURI:
        description: diskURI is the URI of data disk in the blob storage
        type: string
      fsType:
        description: |-
          fsType is Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          +optional
        type: string
      kind:
        description: 'kind expected values are Shared: multiple blob disks per storage
          account  Dedicated: single blob disk per storage account  Managed: azure
          managed data disk (only in managed availability set). defaults to shared'
        type: string
      readOnly:
        description: |-
          readOnly Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
    type: object
  v1.AzureFileVolumeSource:
    properties:
      readOnly:
        description: |-
          readOnly defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretName:
        description: secretName is the  name of secret that contains Azure Storage
          Account Name and Key
        type: string
      shareName:
        description: shareName is the azure share Name
        type: string
    type: object
  v1.CSIVolumeSource:
    properties:
      driver:
        description: |-
          driver is the name of the CSI driver that handles this volume.
          Consult with your admin for the correct name as registered in the cluster.
        type: string
      fsType:
        description: |-
          fsType to mount. Ex. "ext4", "xfs", "ntfs".
          If not provided, the empty value is passed to the associated CSI driver
          which will determine the default filesystem to apply.
          +optional
        type: string
      nodePublishSecretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          nodePublishSecretRef is a reference to the secret object containing
          sensitive information to pass to the CSI driver to complete the CSI
          NodePublishVolume and NodeUnpublishVolume calls.
          This field is optional, and  may be empty if no secret is required. If the
          secret object contains more than one secret, all secret references are passed.
          +optional
      readOnly:
        description: |-
          readOnly specifies a read-only configuration for the volume.
          Defaults to false (read/write).
          +optional
        type: boolean
      volumeAttributes:
        additionalProperties:
          type: string
        description: |-
          volumeAttributes stores driver-specific properties that are passed to the CSI
          driver. Consult your driver's documentation for supported values.
          +optional
        type: object
    type: object
  v1.Capabilities:
    properties:
      add:
        description: |-
          Added capabilities
          +optional
        items:
          type: string
        type: array
      drop:
        description: |-
          Removed capabilities
          +optional
        items:
          type: string
        type: array
    type: object
  v1.CephFSVolumeSource:
    properties:
      monitors:
        description: |-
          monitors is Required: Monitors is a collection of Ceph monitors
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
        items:
          type: string
        type: array
      path:
        description: |-
          path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
          +optional
        type: string
      readOnly:
        description: |-
          readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: boolean
      secretFile:
        description: |-
          secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: string
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
          +optional
      user:
        description: |-
          user is optional: User is the rados user name, default is admin
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: string
    type: object
  v1.CinderVolumeSource:
    properties:
      fsType:
        description: |-
          fsType is the filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
          +optional
        type: string
      readOnly:
        description: |-
          readOnly defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          secretRef is optional: points to a secret object containing parameters used to connect
          to OpenStack.
          +optional
      volumeID:
        description: |-
          volumeID used to identify the volume in cinder.
          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
        type: string
    type: object
  v1.ConfigMapEnvSource:
    properties:
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap must be defined
          +optional
        type: boolean
    type: object
  v1.ConfigMapKeySelector:
    properties:
      key:
        description: The key to select.
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap or its key must be defined
          +optional
        type: boolean
    type: object
  v1.ConfigMapProjection:
    properties:
      items:
        description: |-
          items if unspecified, each key-value pair in the Data field of the referenced
          ConfigMap will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the ConfigMap,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          optional specify whether the ConfigMap or its keys must be defined
          +optional
        type: boolean
    type: object
  v1.ConfigMapVolumeSource:
    properties:
      defaultMode:
        description: |-
          defaultMode is optional: mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      items:
        description: |-
          items if unspecified, each key-value pair in the Data field of the referenced
          ConfigMap will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the ConfigMap,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          optional specify whether the ConfigMap or its keys must be defined
          +optional
        type: boolean
    type: object
  v1.Container:
    properties:
      args:
        description: |-
          Arguments to the entrypoint.
          The container image's CMD is used if this is not provided.
          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
          of whether the variable exists or not. Cannot be updated.
          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
          +optional
        items:
          type: string
        type: array
      command:
        description: |-
          Entrypoint array. Not executed within a shell.
          The container image's ENTRYPOINT is used if this is not provided.
          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
          of whether the variable exists or not. Cannot be updated.
          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
          +optional
        items:
          type: string
        type: array
      env:
        description: |-
          List of environment variables to set in the container.
          Cannot be updated.
          +optional
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.EnvVar'
        type: array
      envFrom:
        description: |-
          List of sources to populate environment variables in the container.
          The keys defined within a source must be a C_IDENTIFIER. All invalid keys
          will be reported as an event when the container is starting. When a key exists in multiple
          sources, the value associated with the last source will take precedence.
          Values defined by an Env with a duplicate key will take precedence.
          Cannot be updated.
          +optional
        items:
          $ref: '#/definitions/v1.EnvFromSource'
        type: array
      image:
        description: |-
          Container image name.
          More info: https://kubernetes.io/docs/concepts/containers/images
          This field is optional to allow higher level config management to default or override
          container images in workload controllers like Deployments and StatefulSets.
          +optional
        type: string
      imagePullPolicy:
        description: |-
          Image pull policy.
          One of Always, Never, IfNotPresent.
          Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
          +optional
        type: string
      lifecycle:
        $ref: '#/definitions/v1.Lifecycle'
        description: |-
          Actions that the management system should take in response to container lifecycle events.
          Cannot be updated.
          +optional
      livenessProbe:
        $ref: '#/definitions/v1.Probe'
        description: |-
          Periodic probe of container liveness.
          Container will be restarted if the probe fails.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      name:
        description: |-
          Name of the container specified as a DNS_LABEL.
          Each container in a pod must have a unique name (DNS_LABEL).
          Cannot be updated.
        type: string
      ports:
        description: |-
          List of ports to expose from the container. Not specifying a port here
          DOES NOT prevent that port from being exposed. Any port which is
          listening on the default "0.0.0.0" address inside a container will be
          accessible from the network.
          Modifying this array with strategic merge patch may corrupt the data.
          For more information See https://github.com/kubernetes/kubernetes/issues/108255.
          Cannot be updated.
          +optional
          +patchMergeKey=containerPort
          +patchStrategy=merge
          +listType=map
          +listMapKey=containerPort
          +listMapKey=protocol
        items:
          $ref: '#/definitions/v1.ContainerPort'
        type: array
      readinessProbe:
        $ref: '#/definitions/v1.Probe'
        description: |-
          Periodic probe of container service readiness.
          Container will be removed from service endpoints if the probe fails.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      resizePolicy:
        description: |-
          Resources resize policy for the container.
          +featureGate=InPlacePodVerticalScaling
          +optional
          +listType=atomic
        items:
          $ref: '#/definitions/v1.ContainerResizePolicy'
        type: array
      resources:
        $ref: '#/definitions/v1.ResourceRequirements'
        description: |-
          Compute Resources required by this container.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          +optional
      restartPolicy:
        description: |-
          RestartPolicy defines the restart behavior of individual containers in a pod.
          This field may only be set for init containers, and the only allowed value is "Always".
          For non-init containers or when this field is not specified,
          the restart behavior is defined by the Pod's restart policy and the container type.
          Setting the RestartPolicy as "Always" for the init container will have the following effect:
          this init container will be continually restarted on
          exit until all regular containers have terminated. Once all regular
          containers have completed, all init containers with restartPolicy "Always"
          will be shut down. This lifecycle differs from normal init containers and
          is often referred to as a "sidecar" container. Although this init
          container still starts in the init container sequence, it does not wait
          for the container to complete before proceeding to the next init
          container. Instead, the next init container starts immediately after this
          init container is started, or after any startupProbe has successfully
          completed.
          +featureGate=SidecarContainers
          +optional
        type: string
      securityContext:
        $ref: '#/definitions/v1.SecurityContext'
        description: |-
          SecurityContext defines the security options the container should be run with.
          If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
          +optional
      startupProbe:
        $ref: '#/definitions/v1.Probe'
        description: |-
          StartupProbe indicates that the Pod has successfully initialized.
          If specified, no other probes are executed until this completes successfully.
          If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
          This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
          when it might take a long time to load data or warm a cache, than during steady-state operation.
          This cannot be updated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      stdin:
        description: |-
          Whether this container should allocate a buffer for stdin in the container runtime. If this
          is not set, reads from stdin in the container will always result in EOF.
          Default is false.
          +optional
        type: boolean
      stdinOnce:
        description: |-
          Whether the container runtime should close the stdin channel after it has been opened by
          a single attach. When stdin is true the stdin stream will remain open across multiple attach
          sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
          first client attaches to stdin, and then remains open and accepts data until the client disconnects,
          at which time stdin is closed and remains closed until the container is restarted. If this
          flag is false, a container processes that reads from stdin will never receive an EOF.
          Default is false
          +optional
        type: boolean
      terminationMessagePath:
        description: |-
          Optional: Path at which the file to which the container's termination message
          will be written is mounted into the container's filesystem.
          Message written is intended to be brief final status, such as an assertion failure message.
          Will be truncated by the node if greater than 4096 bytes. The total message length across
          all containers will be limited to 12kb.
          Defaults to /dev/termination-log.
          Cannot be updated.
          +optional
        type: string
      terminationMessagePolicy:
        description: |-
          Indicate how the termination message should be populated. File will use the contents of
          terminationMessagePath to populate the container status message on both success and failure.
          FallbackToLogsOnError will use the last chunk of container log output if the termination
          message file is empty and the container exited with an error.
          The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
          Defaults to File.
          Cannot be updated.
          +optional
        type: string
      tty:
        description: |-
          Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
          Default is false.
          +optional
        type: boolean
      volumeDevices:
        description: |-
          volumeDevices is the list of block devices to be used by the container.
          +patchMergeKey=devicePath
          +patchStrategy=merge
          +optional
        items:
          $ref: '#/definitions/v1.VolumeDevice'
        type: array
      volumeMounts:
        description: |-
          Pod volumes to mount into the container's filesystem.
          Cannot be updated.
          +optional
          +patchMergeKey=mountPath
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.VolumeMount'
        type: array
      workingDir:
        description: |-
          Container's working directory.
          If not specified, the container runtime's default will be used, which
          might be configured in the container image.
          Cannot be updated.
          +optional
        type: string
    type: object
  v1.ContainerPort:
    properties:
      containerPort:
        description: |-
          Number of port to expose on the pod's IP address.
          This must be a valid port number, 0 < x < 65536.
        type: integer
      hostIP:
        description: |-
          What host IP to bind the external port to.
          +optional
        type: string
      hostPort:
        description: |-
          Number of port to expose on the host.
          If specified, this must be a valid port number, 0 < x < 65536.
          If HostNetwork is specified, this must match ContainerPort.
          Most containers do not need this.
          +optional
        type: integer
      name:
        description: |-
          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
          named port in a pod must have a unique name. Name for the port that can be
          referred to by services.
          +optional
        type: string
      protocol:
        description: |-
          Protocol for port. Must be UDP, TCP, or SCTP.
          Defaults to "TCP".
          +optional
          +default="TCP"
        type: string
    type: object
  v1.ContainerResizePolicy:
    properties:
      resourceName:
        description: |-
          Name of the resource to which this resource resize policy applies.
          Supported values: cpu, memory.
        type: string
      restartPolicy:
        description: |-
          Restart policy to apply when specified resource is resized.
          If not specified, it defaults to NotRequired.
        type: string
    type: object
  v1.DownwardAPIProjection:
    properties:
      items:
        description: |-
          Items is a list of DownwardAPIVolume file
          +optional
        items:
          $ref: '#/definitions/v1.DownwardAPIVolumeFile'
        type: array
    type: object
  v1.DownwardAPIVolumeFile:
    properties:
      fieldRef:
        $ref: '#/definitions/v1.ObjectFieldSelector'
        description: |-
          Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
          +optional
      mode:
        description: |-
          Optional: mode bits used to set permissions on this file, must be an octal value
          between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          If not specified, the volume defaultMode will be used.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      path:
        description: 'Required: Path is  the relative path name of the file to be
          created. Must not be absolute or contain the ''..'' path. Must be utf-8
          encoded. The first item of the relative path must not start with ''..'''
        type: string
      resourceFieldRef:
        $ref: '#/definitions/v1.ResourceFieldSelector'
        description: |-
          Selects a resource of the container: only resources limits and requests
          (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
          +optional
    type: object
  v1.DownwardAPIVolumeSource:
    properties:
      defaultMode:
        description: |-
          Optional: mode bits to use on created files by default. Must be a
          Optional: mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      items:
        description: |-
          Items is a list of downward API volume file
          +optional
        items:
          $ref: '#/definitions/v1.DownwardAPIVolumeFile'
        type: array
    type: object
  v1.EmptyDirVolumeSource:
    properties:
      medium:
        description: |-
          medium represents what type of storage medium should back this directory.
          The default is "" which means to use the node's default medium.
          Must be an empty string (default) or Memory.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
          +optional
        type: string
      sizeLimit:
        $ref: '#/definitions/resource.Quantity'
        description: |-
          sizeLimit is the total amount of local storage required for this EmptyDir volume.
          The size limit is also applicable for memory medium.
          The maximum usage on memory medium EmptyDir would be the minimum value between
          the SizeLimit specified here and the sum of memory limits of all containers in a pod.
          The default is nil which means that the limit is undefined.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
          +optional
    type: object
  v1.EnvFromSource:
    properties:
      configMapRef:
        $ref: '#/definitions/v1.ConfigMapEnvSource'
        description: |-
          The ConfigMap to select from
          +optional
      prefix:
        description: |-
          An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
          +optional
        type: string
      secretRef:
        $ref: '#/definitions/v1.SecretEnvSource'
        description: |-
          The Secret to select from
          +optional
    type: object
  v1.EnvVar:
    properties:
      name:
        description: Name of the environment variable. Must be a C_IDENTIFIER.
        type: string
      value:
        description: |-
          Variable references $(VAR_NAME) are expanded
          using the previously defined environment variables in the container and
          any service environment variables. If a variable cannot be resolved,
          the reference in the input string will be unchanged. Double $$ are reduced
          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
          Escaped references will never be expanded, regardless of whether the variable
          exists or not.
          Defaults to "".
          +optional
        type: string
      valueFrom:
        $ref: '#/definitions/v1.EnvVarSource'
        description: |-
          Source for the environment variable's value. Cannot be used if value is not empty.
          +optional
    type: object
  v1.EnvVarSource:
    properties:
      configMapKeyRef:
        $ref: '#/definitions/v1.ConfigMapKeySelector'
        description: |-
          Selects a key of a ConfigMap.
          +optional
      fieldRef:
        $ref: '#/definitions/v1.ObjectFieldSelector'
        description: |-
          Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
          +optional
      resourceFieldRef:
        $ref: '#/definitions/v1.ResourceFieldSelector'
        description: |-
          Selects a resource of the container: only resources limits and requests
          (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
          +optional
      secretKeyRef:
        $ref: '#/definitions/v1.SecretKeySelector'
        description: |-
          Selects a key of a secret in the pod's namespace
          +optional
    type: object
  v1.EphemeralVolumeSource:
    properties:
      volumeClaimTemplate:
        $ref: '#/definitions/v1.PersistentVolumeClaimTemplate'
        description: |-
          Will be used to create a stand-alone PVC to provision the volume.
          The pod in which this EphemeralVolumeSource is embedded will be the
          owner of the PVC, i.e. the PVC will be deleted together with the
          pod.  The name of the PVC will be `<pod name>-<volume name>` where
          `<volume name>` is the name from the `PodSpec.Volumes` array
          entry. Pod validation will reject the pod if the concatenated name
          is not valid for a PVC (for example, too long).

          An existing PVC with that name that is not owned by the pod
          will *not* be used for the pod to avoid using an unrelated
          volume by mistake. Starting the pod is then blocked until
          the unrelated PVC is removed. If such a pre-created PVC is
          meant to be used by the pod, the PVC has to updated with an
          owner reference to the pod once the pod exists. Normally
          this should not be necessary, but it may be useful when
          manually reconstructing a broken cluster.

          This field is read-only and no changes will be made by Kubernetes
          to the PVC after it has been created.

          Required, must not be nil.
    type: object
  v1.ExecAction:
    properties:
      command:
        description: |-
          Command is the command line to execute inside the container, the working directory for the
          command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
          not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
          a shell, you need to explicitly call out to that shell.
          Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.FCVolumeSource:
    properties:
      fsType:
        description: |-
          fsType is the filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      lun:
        description: |-
          lun is Optional: FC target lun number
          +optional
        type: integer
      readOnly:
        description: |-
          readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      targetWWNs:
        description: |-
          targetWWNs is Optional: FC target worldwide names (WWNs)
          +optional
        items:
          type: string
        type: array
      wwids:
        description: |-
          wwids Optional: FC volume world wide identifiers (wwids)
          Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.FieldsV1:
    type: object
  v1.FlexVolumeSource:
    properties:
      driver:
        description: driver is the name of the driver to use for this volume.
        type: string
      fsType:
        description: |-
          fsType is the filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
          +optional
        type: string
      options:
        additionalProperties:
          type: string
        description: |-
          options is Optional: this field holds extra command options if any.
          +optional
        type: object
      readOnly:
        description: |-
          readOnly is Optional: defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          secretRef is Optional: secretRef is reference to the secret object containing
          sensitive information to pass to the plugin scripts. This may be
          empty if no secret object is specified. If the secret object
          contains more than one secret, all secrets are passed to the plugin
          scripts.
          +optional
    type: object
  v1.FlockerVolumeSource:
    properties:
      datasetName:
        description: |-
          datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
          should be considered as deprecated
          +optional
        type: string
      datasetUUID:
        description: |-
          datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
          +optional
        type: string
    type: object
  v1.GCEPersistentDiskVolumeSource:
    properties:
      fsType:
        description: |-
          fsType is filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      partition:
        description: |-
          partition is the partition in the volume that you want to mount.
          If omitted, the default is to mount by volume name.
          Examples: For volume /dev/sda1, you specify the partition as "1".
          Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          +optional
        type: integer
      pdName:
        description: |-
          pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
        type: string
      readOnly:
        description: |-
          readOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          +optional
        type: boolean
    type: object
  v1.GRPCAction:
    properties:
      port:
        description: Port number of the gRPC service. Number must be in the range
          1 to 65535.
        type: integer
      service:
        description: |-
          Service is the name of the service to place in the gRPC HealthCheckRequest
          (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

          If this is not specified, the default behavior is defined by gRPC.
          +optional
          +default=""
        type: string
    type: object
  v1.GitRepoVolumeSource:
    properties:
      directory:
        description: |-
          directory is the target directory name.
          Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
          git repository.  Otherwise, if specified, the volume will contain the git repository in
          the subdirectory with the given name.
          +optional
        type: string
      repository:
        description: repository is the URL
        type: string
      revision:
        description: |-
          revision is the commit hash for the specified revision.
          +optional
        type: string
    type: object
  v1.GlusterfsVolumeSource:
    properties:
      endpoints:
        description: |-
          endpoints is the endpoint name that details Glusterfs topology.
          More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
        type: string
      path:
        description: |-
          path is the Glusterfs volume path.
          More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
        type: string
      readOnly:
        description: |-
          readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
          Defaults to false.
          More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
          +optional
        type: boolean
    type: object
  v1.HTTPGetAction:
    properties:
      host:
        description: |-
          Host name to connect to, defaults to the pod IP. You probably want to set
          "Host" in httpHeaders instead.
          +optional
        type: string
      httpHeaders:
        description: |-
          Custom headers to set in the request. HTTP allows repeated headers.
          +optional
        items:
          $ref: '#/definitions/v1.HTTPHeader'
        type: array
      path:
        description: |-
          Path to access on the HTTP server.
          +optional
        type: string
      port:
        $ref: '#/definitions/intstr.IntOrString'
        description: |-
          Name or number of the port to access on the container.
          Number must be in the range 1 to 65535.
          Name must be an IANA_SVC_NAME.
      scheme:
        description: |-
          Scheme to use for connecting to the host.
          Defaults to HTTP.
          +optional
        type: string
    type: object
  v1.HTTPHeader:
    properties:
      name:
        description: |-
          The header field name.
          This will be canonicalized upon output, so case-variant names will be understood as the same header.
        type: string
      value:
        description: The header field value
        type: string
    type: object
  v1.HostPathVolumeSource:
    properties:
      path:
        description: |-
          path of the directory on the host.
          If the path is a symlink, it will follow the link to the real path.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
        type: string
      type:
        description: |-
          type for HostPath Volume
          Defaults to ""
          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
          +optional
        type: string
    type: object
  v1.ISCSIVolumeSource:
    properties:
      chapAuthDiscovery:
        description: |-
          chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
          +optional
        type: boolean
      chapAuthSession:
        description: |-
          chapAuthSession defines whether support iSCSI Session CHAP authentication
          +optional
        type: boolean
      fsType:
        description: |-
          fsType is the filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      initiatorName:
        description: |-
          initiatorName is the custom iSCSI Initiator Name.
          If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
          <target portal>:<volume name> will be created for the connection.
          +optional
        type: string
      iqn:
        description: iqn is the target iSCSI Qualified Name.
        type: string
      iscsiInterface:
        description: |-
          iscsiInterface is the interface Name that uses an iSCSI transport.
          Defaults to 'default' (tcp).
          +optional
        type: string
      lun:
        description: lun represents iSCSI Target Lun number.
        type: integer
      portals:
        description: |-
          portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
          is other than default (typically TCP ports 860 and 3260).
          +optional
        items:
          type: string
        type: array
      readOnly:
        description: |-
          readOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          secretRef is the CHAP Secret for iSCSI target and initiator authentication
          +optional
      targetPortal:
        description: |-
          targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
          is other than default (typically TCP ports 860 and 3260).
        type: string
    type: object
  v1.KeyToPath:
    properties:
      key:
        description: key is the key to project.
        type: string
      mode:
        description: |-
          mode is Optional: mode bits used to set permissions on this file.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          If not specified, the volume defaultMode will be used.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      path:
        description: |-
          path is the relative path of the file to map the key to.
          May not be an absolute path.
          May not contain the path element '..'.
          May not start with the string '..'.
        type: string
    type: object
  v1.LabelSelector:
    properties:
      matchExpressions:
        description: |-
          matchExpressions is a list of label selector requirements. The requirements are ANDed.
          +optional
        items:
          $ref: '#/definitions/v1.LabelSelectorRequirement'
        type: array
      matchLabels:
        additionalProperties:
          type: string
        description: |-
          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
          map is equivalent to an element of matchExpressions, whose key field is "key", the
          operator is "In", and the values array contains only "value". The requirements are ANDed.
          +optional
        type: object
    type: object
  v1.LabelSelectorRequirement:
    properties:
      key:
        description: key is the label key that the selector applies to.
        type: string
      operator:
        description: |-
          operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        type: string
      values:
        description: |-
          values is an array of string values. If the operator is In or NotIn,
          the values array must be non-empty. If the operator is Exists or DoesNotExist,
          the values array must be empty. This array is replaced during a strategic
          merge patch.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.Lifecycle:
    properties:
      postStart:
        $ref: '#/definitions/v1.LifecycleHandler'
        description: |-
          PostStart is called immediately after a container is created. If the handler fails,
          the container is terminated and restarted according to its restart policy.
          Other management of the container blocks until the hook completes.
          More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
          +optional
      preStop:
        $ref: '#/definitions/v1.LifecycleHandler'
        description: |-
          PreStop is called immediately before a container is terminated due to an
          API request or management event such as liveness/startup probe failure,
          preemption, resource contention, etc. The handler is not called if the
          container crashes or exits. The Pod's termination grace period countdown begins before the
          PreStop hook is executed. Regardless of the outcome of the handler, the
          container will eventually terminate within the Pod's termination grace
          period (unless delayed by finalizers). Other management of the container blocks until the hook completes
          or until the termination grace period is reached.
          More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
          +optional
    type: object
  v1.LifecycleHandler:
    properties:
      exec:
        $ref: '#/definitions/v1.ExecAction'
        description: |-
          Exec specifies the action to take.
          +optional
      httpGet:
        $ref: '#/definitions/v1.HTTPGetAction'
        description: |-
          HTTPGet specifies the http request to perform.
          +optional
      tcpSocket:
        $ref: '#/definitions/v1.TCPSocketAction'
        description: |-
          Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
          for the backward compatibility. There are no validation of this field and
          lifecycle hooks will fail in runtime when tcp handler is specified.
          +optional
    type: object
  v1.LocalObjectReference:
    properties:
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
    type: object
  v1.ManagedFieldsEntry:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the version of this resource that this field set
          applies to. The format is "group/version" just like the top-level
          APIVersion field. It is necessary to track the version of a field
          set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: |-
          FieldsType is the discriminator for the different fields format and version.
          There is currently only one possible value: "FieldsV1"
        type: string
      fieldsV1:
        $ref: '#/definitions/v1.FieldsV1'
        description: |-
          FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
          +optional
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        description: |-
          Operation is the type of operation which lead to this ManagedFieldsEntry being created.
          The only valid values for this field are 'Apply' and 'Update'.
        type: string
      subresource:
        description: |-
          Subresource is the name of the subresource used to update that object, or
          empty string if the object was updated through the main resource. The
          value of this field is used to distinguish between managers, even if they
          share the same name. For example, a status update will be distinct from a
          regular update using the same manager name.
          Note that the APIVersion field is not related to the Subresource field and
          it always corresponds to the version of the main resource.
        type: string
      time:
        description: |-
          Time is the timestamp of when the ManagedFields entry was added. The
          timestamp will also be updated if a field is added, the manager
          changes any of the owned fields value or removes a field. The
          timestamp does not update when a field is removed from the entry
          because another manager took it over.
          +optional
        type: string
    type: object
  v1.NFSVolumeSource:
    properties:
      path:
        description: |-
          path that is exported by the NFS server.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
        type: string
      readOnly:
        description: |-
          readOnly here will force the NFS export to be mounted with read-only permissions.
          Defaults to false.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
          +optional
        type: boolean
      server:
        description: |-
          server is the hostname or IP address of the NFS server.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
        type: string
    type: object
  v1.ObjectFieldSelector:
    properties:
      apiVersion:
        description: |-
          Version of the schema the FieldPath is written in terms of, defaults to "v1".
          +optional
        type: string
      fieldPath:
        description: Path of the field to select in the specified API version.
        type: string
    type: object
  v1.ObjectReference:
    properties:
      apiVersion:
        description: |-
          API version of the referent.
          +optional
        type: string
      fieldPath:
        description: |-
          If referring to a piece of an object instead of an entire object, this string
          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
          For example, if the object reference is to a container within a pod, this would take on a value like:
          "spec.containers{name}" (where "name" refers to the name of the container that triggered
          the event) or if no container name is specified "spec.containers[2]" (container with
          index 2 in this pod). This syntax is chosen only to have some well-defined way of
          referencing a part of an object.
          TODO: this design is not final and this field is subject to change in the future.
          +optional
        type: string
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
          +optional
        type: string
      resourceVersion:
        description: |-
          Specific resourceVersion to which this reference is made, if any.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
          +optional
        type: string
    type: object
  v1.OwnerReference:
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
          for how the garbage collector interacts with this field and enforces the foreground deletion.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
        type: string
    type: object
  v1.PersistentVolumeClaimSpec:
    properties:
      accessModes:
        description: |-
          accessModes contains the desired access modes the volume should have.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
          +optional
        items:
          type: string
        type: array
      dataSource:
        $ref: '#/definitions/v1.TypedLocalObjectReference'
        description: |-
          dataSource field can be used to specify either:
          * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
          * An existing PVC (PersistentVolumeClaim)
          If the provisioner or an external controller can support the specified data source,
          it will create a new volume based on the contents of the specified data source.
          When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
          and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
          If the namespace is specified, then dataSourceRef will not be copied to dataSource.
          +optional
      dataSourceRef:
        $ref: '#/definitions/v1.TypedObjectReference'
        description: |-
          dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
          volume is desired. This may be any object from a non-empty API group (non
          core object) or a PersistentVolumeClaim object.
          When this field is specified, volume binding will only succeed if the type of
          the specified object matches some installed volume populator or dynamic
          provisioner.
          This field will replace the functionality of the dataSource field and as such
          if both fields are non-empty, they must have the same value. For backwards
          compatibility, when namespace isn't specified in dataSourceRef,
          both fields (dataSource and dataSourceRef) will be set to the same
          value automatically if one of them is empty and the other is non-empty.
          When namespace is specified in dataSourceRef,
          dataSource isn't set to the same value and must be empty.
          There are three important differences between dataSource and dataSourceRef:
          * While dataSource only allows two specific types of objects, dataSourceRef
            allows any non-core object, as well as PersistentVolumeClaim objects.
          * While dataSource ignores disallowed values (dropping them), dataSourceRef
            preserves all values, and generates an error if a disallowed value is
            specified.
          * While dataSource only allows local objects, dataSourceRef allows objects
            in any namespaces.
          (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
          (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
          +optional
      resources:
        $ref: '#/definitions/v1.ResourceRequirements'
        description: |-
          resources represents the minimum resources the volume should have.
          If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
          that are lower than previous value but must still be higher than capacity recorded in the
          status field of the claim.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
          +optional
      selector:
        $ref: '#/definitions/v1.LabelSelector'
        description: |-
          selector is a label query over volumes to consider for binding.
          +optional
      storageClassName:
        description: |-
          storageClassName is the name of the StorageClass required by the claim.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
          +optional
        type: string
      volumeMode:
        description: |-
          volumeMode defines what type of volume is required by the claim.
          Value of Filesystem is implied when not included in claim spec.
          +optional
        type: string
      volumeName:
        description: |-
          volumeName is the binding reference to the PersistentVolume backing this claim.
          +optional
        type: string
    type: object
  v1.PersistentVolumeClaimTemplate:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
          +optional
        type: object
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          Finalizers may be processed and removed in any order.  Order is NOT enforced
          because it introduces significant risk of stuck finalizers.
          finalizers is a shared field, any actor with permission can reorder it.
          If the finalizer list is processed in order, then this can lead to a situation
          in which the component responsible for the first finalizer in the list is
          waiting for a signal (field value, external system, or other) produced by a
          component responsible for a finalizer later in the list, resulting in a deadlock.
          Without enforced ordering finalizers are free to order amongst themselves and
          are not vulnerable to ordering changes in the list.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will return a 409.

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
          +optional
        type: object
      managedFields:
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          +optional
        items:
          $ref: '#/definitions/v1.ManagedFieldsEntry'
        type: array
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.PersistentVolumeClaimSpec'
        description: |-
          The specification for the PersistentVolumeClaim. The entire content is
          copied unchanged into the PVC that gets created from this
          template. The same fields as in a PersistentVolumeClaim
          are also valid here.
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
          +optional
        type: string
    type: object
  v1.PersistentVolumeClaimVolumeSource:
    properties:
      claimName:
        description: |-
          claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
        type: string
      readOnly:
        description: |-
          readOnly Will force the ReadOnly setting in VolumeMounts.
          Default false.
          +optional
        type: boolean
    type: object
  v1.PhotonPersistentDiskVolumeSource:
    properties:
      fsType:
        description: |-
          fsType is the filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        type: string
      pdID:
        description: pdID is the ID that identifies Photon Controller persistent disk
        type: string
    type: object
  v1.PortworxVolumeSource:
    properties:
      fsType:
        description: |-
          fSType represents the filesystem type to mount
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
        type: string
      readOnly:
        description: |-
          readOnly defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      volumeID:
        description: volumeID uniquely identifies a Portworx volume
        type: string
    type: object
  v1.Probe:
    properties:
      exec:
        $ref: '#/definitions/v1.ExecAction'
        description: |-
          Exec specifies the action to take.
          +optional
      failureThreshold:
        description: |-
          Minimum consecutive failures for the probe to be considered failed after having succeeded.
          Defaults to 3. Minimum value is 1.
          +optional
        type: integer
      grpc:
        $ref: '#/definitions/v1.GRPCAction'
        description: |-
          GRPC specifies an action involving a GRPC port.
          +optional
      httpGet:
        $ref: '#/definitions/v1.HTTPGetAction'
        description: |-
          HTTPGet specifies the http request to perform.
          +optional
      initialDelaySeconds:
        description: |-
          Number of seconds after the container has started before liveness probes are initiated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
        type: integer
      periodSeconds:
        description: |-
          How often (in seconds) to perform the probe.
          Default to 10 seconds. Minimum value is 1.
          +optional
        type: integer
      successThreshold:
        description: |-
          Minimum consecutive successes for the probe to be considered successful after having failed.
          Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
          +optional
        type: integer
      tcpSocket:
        $ref: '#/definitions/v1.TCPSocketAction'
        description: |-
          TCPSocket specifies an action involving a TCP port.
          +optional
      terminationGracePeriodSeconds:
        description: |-
          Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
          The grace period is the duration in seconds after the processes running in the pod are sent
          a termination signal and the time when the processes are forcibly halted with a kill signal.
          Set this value longer than the expected cleanup time for your process.
          If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
          value overrides the value provided by the pod spec.
          Value must be non-negative integer. The value zero indicates stop immediately via
          the kill signal (no opportunity to shut down).
          This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
          Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
          +optional
        type: integer
      timeoutSeconds:
        description: |-
          Number of seconds after which the probe times out.
          Defaults to 1 second. Minimum value is 1.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
        type: integer
    type: object
  v1.ProjectedVolumeSource:
    properties:
      defaultMode:
        description: |-
          defaultMode are the mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      sources:
        description: |-
          sources is the list of volume projections
          +optional
        items:
          $ref: '#/definitions/v1.VolumeProjection'
        type: array
    type: object
  v1.QuobyteVolumeSource:
    properties:
      group:
        description: |-
          group to map volume access to
          Default is no group
          +optional
        type: string
      readOnly:
        description: |-
          readOnly here will force the Quobyte volume to be mounted with read-only permissions.
          Defaults to false.
          +optional
        type: boolean
      registry:
        description: |-
          registry represents a single or multiple Quobyte Registry services
          specified as a string as host:port pair (multiple entries are separated with commas)
          which acts as the central registry for volumes
        type: string
      tenant:
        description: |-
          tenant owning the given Quobyte volume in the Backend
          Used with dynamically provisioned Quobyte volumes, value is set by the plugin
          +optional
        type: string
      user:
        description: |-
          user to map volume access to
          Defaults to serivceaccount user
          +optional
        type: string
      volume:
        description: volume is a string that references an already created Quobyte
          volume by name.
        type: string
    type: object
  v1.RBDVolumeSource:
    properties:
      fsType:
        description: |-
          fsType is the filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      image:
        description: |-
          image is the rados image name.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
        type: string
      keyring:
        description: |-
          keyring is the path to key ring for RBDUser.
          Default is /etc/ceph/keyring.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
      monitors:
        description: |-
          monitors is a collection of Ceph monitors.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
        items:
          type: string
        type: array
      pool:
        description: |-
          pool is the rados pool name.
          Default is rbd.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
      readOnly:
        description: |-
          readOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          secretRef is name of the authentication secret for RBDUser. If provided
          overrides keyring.
          Default is nil.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
      user:
        description: |-
          user is the rados user name.
          Default is admin.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
    type: object
  v1.ResourceClaim:
    properties:
      name:
        description: |-
          Name must match the name of one entry in pod.spec.resourceClaims of
          the Pod where this field is used. It makes that resource available
          inside a container.
        type: string
    type: object
  v1.ResourceFieldSelector:
    properties:
      containerName:
        description: |-
          Container name: required for volumes, optional for env vars
          +optional
        type: string
      divisor:
        $ref: '#/definitions/resource.Quantity'
        description: |-
          Specifies the output format of the exposed resources, defaults to "1"
          +optional
      resource:
        description: 'Required: resource to select'
        type: string
    type: object
  v1.ResourceList:
    additionalProperties:
      $ref: '#/definitions/resource.Quantity'
    type: object
  v1.ResourceRequirements:
    properties:
      claims:
        description: |-
          Claims lists the names of resources, defined in spec.resourceClaims,
          that are used by this container.

          This is an alpha field and requires enabling the
          DynamicResourceAllocation feature gate.

          This field is immutable. It can only be set for containers.

          +listType=map
          +listMapKey=name
          +featureGate=DynamicResourceAllocation
          +optional
        items:
          $ref: '#/definitions/v1.ResourceClaim'
        type: array
      limits:
        $ref: '#/definitions/v1.ResourceList'
        description: |-
          Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          +optional
      requests:
        $ref: '#/definitions/v1.ResourceList'
        description: |-
          Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
          otherwise to an implementation-defined value. Requests cannot exceed Limits.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          +optional
    type: object
  v1.SELinuxOptions:
    properties:
      level:
        description: |-
          Level is SELinux level label that applies to the container.
          +optional
        type: string
      role:
        description: |-
          Role is a SELinux role label that applies to the container.
          +optional
        type: string
      type:
        description: |-
          Type is a SELinux type label that applies to the container.
          +optional
        type: string
      user:
        description: |-
          User is a SELinux user label that applies to the container.
          +optional
        type: string
    type: object
  v1.ScaleIOVolumeSource:
    properties:
      fsType:
        description: |-
          fsType is the filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs".
          Default is "xfs".
          +optional
        type: string
      gateway:
        description: gateway is the host address of the ScaleIO API Gateway.
        type: string
      protectionDomain:
        description: |-
          protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
          +optional
        type: string
      readOnly:
        description: |-
          readOnly Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          secretRef references to the secret for ScaleIO user and other
          sensitive information. If this is not provided, Login operation will fail.
      sslEnabled:
        description: |-
          sslEnabled Flag enable/disable SSL communication with Gateway, default false
          +optional
        type: boolean
      storageMode:
        description: |-
          storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
          Default is ThinProvisioned.
          +optional
        type: string
      storagePool:
        description: |-
          storagePool is the ScaleIO Storage Pool associated with the protection domain.
          +optional
        type: string
      system:
        description: system is the name of the storage system as configured in ScaleIO.
        type: string
      volumeName:
        description: |-
          volumeName is the name of a volume already created in the ScaleIO system
          that is associated with this volume source.
        type: string
    type: object
  v1.SeccompProfile:
    properties:
      localhostProfile:
        description: |-
          localhostProfile indicates a profile defined in a file on the node should be used.
          The profile must be preconfigured on the node to work.
          Must be a descending path, relative to the kubelet's configured seccomp profile location.
          Must be set if type is "Localhost". Must NOT be set for any other type.
          +optional
        type: string
      type:
        description: |-
          type indicates which kind of seccomp profile will be applied.
          Valid options are:

          Localhost - a profile defined in a file on the node should be used.
          RuntimeDefault - the container runtime default profile should be used.
          Unconfined - no profile should be applied.
          +unionDiscriminator
        type: string
    type: object
  v1.SecretEnvSource:
    properties:
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the Secret must be defined
          +optional
        type: boolean
    type: object
  v1.SecretKeySelector:
    properties:
      key:
        description: The key of the secret to select from.  Must be a valid secret
          key.
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the Secret or its key must be defined
          +optional
        type: boolean
    type: object
  v1.SecretProjection:
    properties:
      items:
        description: |-
          items if unspecified, each key-value pair in the Data field of the referenced
          Secret will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the Secret,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          optional field specify whether the Secret or its key must be defined
          +optional
        type: boolean
    type: object
  v1.SecretVolumeSource:
    properties:
      defaultMode:
        description: |-
          defaultMode is Optional: mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values
          for mode bits. Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      items:
        description: |-
          items If unspecified, each key-value pair in the Data field of the referenced
          Secret will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the Secret,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      optional:
        description: |-
          optional field specify whether the Secret or its keys must be defined
          +optional
        type: boolean
      secretName:
        description: |-
          secretName is the name of the secret in the pod's namespace to use.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
          +optional
        type: string
    type: object
  v1.SecurityContext:
    properties:
      allowPrivilegeEscalation:
        description: |-
          AllowPrivilegeEscalation controls whether a process can gain more
          privileges than its parent process. This bool directly controls if
          the no_new_privs flag will be set on the container process.
          AllowPrivilegeEscalation is true always when the container is:
          1) run as Privileged
          2) has CAP_SYS_ADMIN
          Note that this field cannot be set when spec.os.name is windows.
          +optional
        type: boolean
      capabilities:
        $ref: '#/definitions/v1.Capabilities'
        description: |-
          The capabilities to add/drop when running containers.
          Defaults to the default set of capabilities granted by the container runtime.
          Note that this field cannot be set when spec.os.name is windows.
          +optional
      privileged:
        description: |-
          Run container in privileged mode.
          Processes in privileged containers are essentially equivalent to root on the host.
          Defaults to false.
          Note that this field cannot be set when spec.os.name is windows.
          +optional
        type: boolean
      procMount:
        description: |-
          procMount denotes the type of proc mount to use for the containers.
          The default is DefaultProcMount which uses the container runtime defaults for
          readonly paths and masked paths.
          This requires the ProcMountType feature flag to be enabled.
          Note that this field cannot be set when spec.os.name is windows.
          +optional
        type: string
      readOnlyRootFilesystem:
        description: |-
          Whether this container has a read-only root filesystem.
          Default is false.
          Note that this field cannot be set when spec.os.name is windows.
          +optional
        type: boolean
      runAsGroup:
        description: |-
          The GID to run the entrypoint of the container process.
          Uses runtime default if unset.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          Note that this field cannot be set when spec.os.name is windows.
          +optional
        type: integer
      runAsNonRoot:
        description: |-
          Indicates that the container must run as a non-root user.
          If true, the Kubelet will validate the image at runtime to ensure that it
          does not run as UID 0 (root) and fail to start the container if it does.
          If unset or false, no such validation will be performed.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
        type: boolean
      runAsUser:
        description: |-
          The UID to run the entrypoint of the container process.
          Defaults to user specified in image metadata if unspecified.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          Note that this field cannot be set when spec.os.name is windows.
          +optional
        type: integer
      seLinuxOptions:
        $ref: '#/definitions/v1.SELinuxOptions'
        description: |-
          The SELinux context to be applied to the container.
          If unspecified, the container runtime will allocate a random SELinux context for each
          container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          Note that this field cannot be set when spec.os.name is windows.
          +optional
      seccompProfile:
        $ref: '#/definitions/v1.SeccompProfile'
        description: |-
          The seccomp options to use by this container. If seccomp options are
          provided at both the pod & container level, the container options
          override the pod options.
          Note that this field cannot be set when spec.os.name is windows.
          +optional
      windowsOptions:
        $ref: '#/definitions/v1.WindowsSecurityContextOptions'
        description: |-
          The Windows specific settings applied to all containers.
          If unspecified, the options from the PodSecurityContext will be used.
          If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
          Note that this field cannot be set when spec.os.name is linux.
          +optional
    type: object
  v1.ServiceAccountTokenProjection:
    properties:
      audience:
        description: |-
          audience is the intended audience of the token. A recipient of a token
          must identify itself with an identifier specified in the audience of the
          token, and otherwise should reject the token. The audience defaults to the
          identifier of the apiserver.
          +optional
        type: string
      expirationSeconds:
        description: |-
          expirationSeconds is the requested duration of validity of the service
          account token. As the token approaches expiration, the kubelet volume
          plugin will proactively rotate the service account token. The kubelet will
          start trying to rotate the token if the token is older than 80 percent of
          its time to live or if the token is older than 24 hours.Defaults to 1 hour
          and must be at least 10 minutes.
          +optional
        type: integer
      path:
        description: |-
          path is the path relative to the mount point of the file to project the
          token into.
        type: string
    type: object
  v1.StorageOSVolumeSource:
    properties:
      fsType:
        description: |-
          fsType is the filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          +optional
        type: string
      readOnly:
        description: |-
          readOnly defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          secretRef specifies the secret to use for obtaining the StorageOS API
          credentials.  If not specified, default values will be attempted.
          +optional
      volumeName:
        description: |-
          volumeName is the human-readable name of the StorageOS volume.  Volume
          names are only unique within a namespace.
        type: string
      volumeNamespace:
        description: |-
          volumeNamespace specifies the scope of the volume within StorageOS.  If no
          namespace is specified then the Pod's namespace will be used.  This allows the
          Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
          Set VolumeName to any name to override the default behaviour.
          Set to "default" if you are not using namespaces within StorageOS.
          Namespaces that do not pre-exist within StorageOS will be created.
          +optional
        type: string
    type: object
  v1.TCPSocketAction:
    properties:
      host:
        description: |-
          Optional: Host name to connect to, defaults to the pod IP.
          +optional
        type: string
      port:
        $ref: '#/definitions/intstr.IntOrString'
        description: |-
          Number or name of the port to access on the container.
          Number must be in the range 1 to 65535.
          Name must be an IANA_SVC_NAME.
    type: object
  v1.TypedLocalObjectReference:
    properties:
      apiGroup:
        description: |-
          APIGroup is the group for the resource being referenced.
          If APIGroup is not specified, the specified Kind must be in the core API group.
          For any other third-party types, APIGroup is required.
          +optional
        type: string
      kind:
        description: Kind is the type of resource being referenced
        type: string
      name:
        description: Name is the name of resource being referenced
        type: string
    type: object
  v1.TypedObjectReference:
    properties:
      apiGroup:
        description: |-
          APIGroup is the group for the resource being referenced.
          If APIGroup is not specified, the specified Kind must be in the core API group.
          For any other third-party types, APIGroup is required.
          +optional
        type: string
      kind:
        description: Kind is the type of resource being referenced
        type: string
      name:
        description: Name is the name of resource being referenced
        type: string
      namespace:
        description: |-
          Namespace is the namespace of resource being referenced
          Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
          (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
          +featureGate=CrossNamespaceVolumeDataSource
          +optional
        type: string
    type: object
  v1.Volume:
    properties:
      awsElasticBlockStore:
        $ref: '#/definitions/v1.AWSElasticBlockStoreVolumeSource'
        description: |-
          awsElasticBlockStore represents an AWS Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          +optional
      azureDisk:
        $ref: '#/definitions/v1.AzureDiskVolumeSource'
        description: |-
          azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
          +optional
      azureFile:
        $ref: '#/definitions/v1.AzureFileVolumeSource'
        description: |-
          azureFile represents an Azure File Service mount on the host and bind mount to the pod.
          +optional
      cephfs:
        $ref: '#/definitions/v1.CephFSVolumeSource'
        description: |-
          cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
          +optional
      cinder:
        $ref: '#/definitions/v1.CinderVolumeSource'
        description: |-
          cinder represents a cinder volume attached and mounted on kubelets host machine.
          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
          +optional
      configMap:
        $ref: '#/definitions/v1.ConfigMapVolumeSource'
        description: |-
          configMap represents a configMap that should populate this volume
          +optional
      csi:
        $ref: '#/definitions/v1.CSIVolumeSource'
        description: |-
          csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
          +optional
      downwardAPI:
        $ref: '#/definitions/v1.DownwardAPIVolumeSource'
        description: |-
          downwardAPI represents downward API about the pod that should populate this volume
          +optional
      emptyDir:
        $ref: '#/definitions/v1.EmptyDirVolumeSource'
        description: |-
          emptyDir represents a temporary directory that shares a pod's lifetime.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
          +optional
      ephemeral:
        $ref: '#/definitions/v1.EphemeralVolumeSource'
        description: |-
          ephemeral represents a volume that is handled by a cluster storage driver.
          The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
          and deleted when the pod is removed.

          Use this if:
          a) the volume is only needed while the pod runs,
          b) features of normal volumes like restoring from snapshot or capacity
             tracking are needed,
          c) the storage driver is specified through a storage class, and
          d) the storage driver supports dynamic volume provisioning through
             a PersistentVolumeClaim (see EphemeralVolumeSource for more
             information on the connection between this volume type
             and PersistentVolumeClaim).

          Use PersistentVolumeClaim or one of the vendor-specific
          APIs for volumes that persist for longer than the lifecycle
          of an individual pod.

          Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
          be used that way - see the documentation of the driver for
          more information.

          A pod can use both types of ephemeral volumes and
          persistent volumes at the same time.

          +optional
      fc:
        $ref: '#/definitions/v1.FCVolumeSource'
        description: |-
          fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
          +optional
      flexVolume:
        $ref: '#/definitions/v1.FlexVolumeSource'
        description: |-
          flexVolume represents a generic volume resource that is
          provisioned/attached using an exec based plugin.
          +optional
      flocker:
        $ref: '#/definitions/v1.FlockerVolumeSource'
        description: |-
          flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
          +optional
      gcePersistentDisk:
        $ref: '#/definitions/v1.GCEPersistentDiskVolumeSource'
        description: |-
          gcePersistentDisk represents a GCE Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          +optional
      gitRepo:
        $ref: '#/definitions/v1.GitRepoVolumeSource'
        description: |-
          gitRepo represents a git repository at a particular revision.
          DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
          EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
          into the Pod's container.
          +optional
      glusterfs:
        $ref: '#/definitions/v1.GlusterfsVolumeSource'
        description: |-
          glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
          More info: https://examples.k8s.io/volumes/glusterfs/README.md
          +optional
      hostPath:
        $ref: '#/definitions/v1.HostPathVolumeSource'
        description: |-
          hostPath represents a pre-existing file or directory on the host
          machine that is directly exposed to the container. This is generally
          used for system agents or other privileged things that are allowed
          to see the host machine. Most containers will NOT need this.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
          ---
          TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
          mount host directories as read/write.
          +optional
      iscsi:
        $ref: '#/definitions/v1.ISCSIVolumeSource'
        description: |-
          iscsi represents an ISCSI Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod.
          More info: https://examples.k8s.io/volumes/iscsi/README.md
          +optional
      name:
        description: |-
          name of the volume.
          Must be a DNS_LABEL and unique within the pod.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        type: string
      nfs:
        $ref: '#/definitions/v1.NFSVolumeSource'
        description: |-
          nfs represents an NFS mount on the host that shares a pod's lifetime
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
          +optional
      persistentVolumeClaim:
        $ref: '#/definitions/v1.PersistentVolumeClaimVolumeSource'
        description: |-
          persistentVolumeClaimVolumeSource represents a reference to a
          PersistentVolumeClaim in the same namespace.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
          +optional
      photonPersistentDisk:
        $ref: '#/definitions/v1.PhotonPersistentDiskVolumeSource'
        description: photonPersistentDisk represents a PhotonController persistent
          disk attached and mounted on kubelets host machine
      portworxVolume:
        $ref: '#/definitions/v1.PortworxVolumeSource'
        description: |-
          portworxVolume represents a portworx volume attached and mounted on kubelets host machine
          +optional
      projected:
        $ref: '#/definitions/v1.ProjectedVolumeSource'
        description: projected items for all in one resources secrets, configmaps,
          and downward API
      quobyte:
        $ref: '#/definitions/v1.QuobyteVolumeSource'
        description: |-
          quobyte represents a Quobyte mount on the host that shares a pod's lifetime
          +optional
      rbd:
        $ref: '#/definitions/v1.RBDVolumeSource'
        description: |-
          rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
          More info: https://examples.k8s.io/volumes/rbd/README.md
          +optional
      scaleIO:
        $ref: '#/definitions/v1.ScaleIOVolumeSource'
        description: |-
          scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
          +optional
      secret:
        $ref: '#/definitions/v1.SecretVolumeSource'
        description: |-
          secret represents a secret that should populate this volume.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
          +optional
      storageos:
        $ref: '#/definitions/v1.StorageOSVolumeSource'
        description: |-
          storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
          +optional
      vsphereVolume:
        $ref: '#/definitions/v1.VsphereVirtualDiskVolumeSource'
        description: |-
          vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
          +optional
    type: object
  v1.VolumeDevice:
    properties:
      devicePath:
        description: devicePath is the path inside of the container that the device
          will be mapped to.
        type: string
      name:
        description: name must match the name of a persistentVolumeClaim in the pod
        type: string
    type: object
  v1.VolumeMount:
    properties:
      mountPath:
        description: |-
          Path within the container at which the volume should be mounted.  Must
          not contain ':'.
        type: string
      mountPropagation:
        description: |-
          mountPropagation determines how mounts are propagated from the host
          to container and the other way around.
          When not set, MountPropagationNone is used.
          This field is beta in 1.10.
          +optional
        type: string
      name:
        description: This must match the Name of a Volume.
        type: string
      readOnly:
        description: |-
          Mounted read-only if true, read-write otherwise (false or unspecified).
          Defaults to false.
          +optional
        type: boolean
      subPath:
        description: |-
          Path within the volume from which the container's volume should be mounted.
          Defaults to "" (volume's root).
          +optional
        type: string
      subPathExpr:
        description: |-
          Expanded path within the volume from which the container's volume should be mounted.
          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
          Defaults to "" (volume's root).
          SubPathExpr and SubPath are mutually exclusive.
          +optional
        type: string
    type: object
  v1.VolumeProjection:
    properties:
      configMap:
        $ref: '#/definitions/v1.ConfigMapProjection'
        description: |-
          configMap information about the configMap data to project
          +optional
      downwardAPI:
        $ref: '#/definitions/v1.DownwardAPIProjection'
        description: |-
          downwardAPI information about the downwardAPI data to project
          +optional
      secret:
        $ref: '#/definitions/v1.SecretProjection'
        description: |-
          secret information about the secret data to project
          +optional
      serviceAccountToken:
        $ref: '#/definitions/v1.ServiceAccountTokenProjection'
        description: |-
          serviceAccountToken is information about the serviceAccountToken data to project
          +optional
    type: object
  v1.VsphereVirtualDiskVolumeSource:
    properties:
      fsType:
        description: |-
          fsType is filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          +optional
        type: string
      storagePolicyID:
        description: |-
          storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
          +optional
        type: string
      storagePolicyName:
        description: |-
          storagePolicyName is the storage Policy Based Management (SPBM) profile name.
          +optional
        type: string
      volumePath:
        description: volumePath is the path that identifies vSphere volume vmdk
        type: string
    type: object
  v1.WindowsSecurityContextOptions:
    properties:
      gmsaCredentialSpec:
        description: |-
          GMSACredentialSpec is where the GMSA admission webhook
          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
          GMSA credential spec named by the GMSACredentialSpecName field.
          +optional
        type: string
      gmsaCredentialSpecName:
        description: |-
          GMSACredentialSpecName is the name of the GMSA credential spec to use.
          +optional
        type: string
      hostProcess:
        description: |-
          HostProcess determines if a container should be run as a 'Host Process' container.
          All of a Pod's containers must have the same effective HostProcess value
          (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
          In addition, if HostProcess is true then HostNetwork must also be set to true.
          +optional
        type: boolean
      runAsUserName:
        description: |-
          The UserName in Windows to run the entrypoint of the container process.
          Defaults to the user specified in image metadata if unspecified.
          May also be set in PodSecurityContext. If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
        type: string
    type: object
  v1alpha1.AWSChaosSpec:
    properties:
      action:
        description: |-
          Action defines the specific aws chaos action.
          Supported action: ec2-stop / ec2-restart / detach-volume
          Default action: ec2-stop
          +kubebuilder:validation:Enum=ec2-stop;ec2-restart;detach-volume
        type: string
      awsRegion:
        description: AWSRegion defines the region of aws.
        type: string
      deviceName:
        description: |-
          DeviceName indicates the name of the device.
          Needed in detach-volume.
          +ui:form:when=action=='detach-volume'
          +optional
        type: string
      duration:
        description: |-
          Duration represents the duration of the chaos action.
          +optional
        type: string
      ec2Instance:
        description: Ec2Instance indicates the ID of the ec2 instance.
        type: string
      endpoint:
        description: |-
          Endpoint indicates the endpoint of the aws server. Just used it in test now.
          +ui:form:ignore
          +optional
        type: string
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      secretName:
        description: |-
          SecretName defines the name of kubernetes secret.
          +optional
        type: string
      volumeID:
        description: |-
          EbsVolume indicates the ID of the EBS volume.
          Needed in detach-volume.
          +ui:form:when=action=='detach-volume'
          +optional
        type: string
    type: object
  v1alpha1.AttrOverrideSpec:
    properties:
      atime:
        $ref: '#/definitions/v1alpha1.Timespec'
        description: +optional
      blocks:
        description: +optional
        type: integer
      ctime:
        $ref: '#/definitions/v1alpha1.Timespec'
        description: +optional
      gid:
        description: +optional
        type: integer
      ino:
        description: +optional
        type: integer
      kind:
        description: +optional
        type: string
      mtime:
        $ref: '#/definitions/v1alpha1.Timespec'
        description: +optional
      nlink:
        description: +optional
        type: integer
      perm:
        description: +optional
        type: integer
      rdev:
        description: +optional
        type: integer
      size:
        description: +optional
        type: integer
      uid:
        description: +optional
        type: integer
    type: object
  v1alpha1.AzureChaosSpec:
    properties:
      action:
        description: |-
          Action defines the specific azure chaos action.
          Supported action: vm-stop / vm-restart / disk-detach
          Default action: vm-stop
          +kubebuilder:validation:Enum=vm-stop;vm-restart;disk-detach
        type: string
      diskName:
        description: |-
          DiskName indicates the name of the disk.
          Needed in disk-detach.
          +optional
        type: string
      duration:
        description: |-
          Duration represents the duration of the chaos action.
          +optional
        type: string
      lun:
        description: |-
          LUN indicates the Logical Unit Number of the data disk.
          Needed in disk-detach.
          +optional
        type: integer
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      resourceGroupName:
        description: ResourceGroupName defines the name of ResourceGroup
        type: string
      secretName:
        description: |-
          SecretName defines the name of kubernetes secret. It is used for Azure credentials.
          +optional
        type: string
      subscriptionID:
        description: SubscriptionID defines the id of Azure subscription.
        type: string
      vmName:
        description: VMName defines the name of Virtual Machine
        type: string
    type: object
  v1alpha1.BandwidthSpec:
    properties:
      buffer:
        description: |-
          Buffer is the maximum amount of bytes that tokens can be available for instantaneously.
          +kubebuilder:validation:Minimum=1
        type: integer
      limit:
        description: |-
          Limit is the number of bytes that can be queued waiting for tokens to become available.
          +kubebuilder:validation:Minimum=1
        type: integer
      minburst:
        description: |-
          Minburst specifies the size of the peakrate bucket. For perfect
          accuracy, should be set to the MTU of the interface.  If a
          peakrate is needed, but some burstiness is acceptable, this
          size can be raised. A 3000 byte minburst allows around 3mbit/s
          of peakrate, given 1000 byte packets.
          +optional
          +kubebuilder:validation:Minimum=0
        type: integer
      peakrate:
        description: |-
          Peakrate is the maximum depletion rate of the bucket.
          The peakrate does not need to be set, it is only necessary
          if perfect millisecond timescale shaping is required.
          +optional
          +kubebuilder:validation:Minimum=0
        type: integer
      rate:
        description: Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps,
          kbps, mbps, gbps, tbps unit. bps means bytes per second.
        type: string
    type: object
  v1alpha1.BlockChaosSpec:
    properties:
      action:
        description: |-
          Action defines the specific block chaos action.
          Supported action: delay
          +kubebuilder:validation:Enum=delay
        type: string
      containerNames:
        description: |-
          ContainerNames indicates list of the name of affected container.
          If not set, the first container will be injected
          +optional
        items:
          type: string
        type: array
      delay:
        $ref: '#/definitions/v1alpha1.BlockDelaySpec'
        description: |-
          Delay defines the delay distribution.
          +optional
      duration:
        description: |-
          Duration represents the duration of the chaos action.
          +optional
        type: string
      mode:
        description: |-
          Mode defines the mode to run chaos action.
          Supported mode: one / all / fixed / fixed-percent / random-max-percent
          +kubebuilder:validation:Enum=one;all;fixed;fixed-percent;random-max-percent
        type: string
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      selector:
        $ref: '#/definitions/v1alpha1.PodSelectorSpec'
        description: Selector is used to select pods that are used to inject chaos
          action.
      value:
        description: |-
          Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.
          If `FixedMode`, provide an integer of pods to do chaos action.
          If `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.
          IF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
          +optional
        type: string
      volumeName:
        type: string
    type: object
  v1alpha1.BlockDelaySpec:
    properties:
      correlation:
        default: "0"
        description: +optional
        type: string
      jitter:
        default: 0ms
        description: +optional
        type: string
      latency:
        description: Latency defines the latency of every io request.
        type: string
    type: object
  v1alpha1.CPUStressor:
    properties:
      load:
        description: |-
          Load specifies P percent loading per CPU worker. 0 is effectively a sleep (no load) and 100
          is full loading.
          +kubebuilder:validation:Minimum=0
          +kubebuilder:validation:Maximum=100
          +optional
        type: integer
      options:
        description: |-
          extend stress-ng options
          +optional
        items:
          type: string
        type: array
      workers:
        description: |-
          Workers specifies N workers to apply the stressor.
          Maximum 8192 workers can run by stress-ng
          +kubebuilder:validation:Maximum=8192
        type: integer
    type: object
  v1alpha1.ChaosOnlyScheduleSpec:
    properties:
      awsChaos:
        $ref: '#/definitions/v1alpha1.AWSChaosSpec'
        description: +optional
      azureChaos:
        $ref: '#/definitions/v1alpha1.AzureChaosSpec'
        description: +optional
      blockChaos:
        $ref: '#/definitions/v1alpha1.BlockChaosSpec'
        description: +optional
      concurrencyPolicy:
        description: |-
          +optional
          +kubebuilder:validation:Enum=Forbid;Allow
        type: string
      dnsChaos:
        $ref: '#/definitions/v1alpha1.DNSChaosSpec'
        description: +optional
      gcpChaos:
        $ref: '#/definitions/v1alpha1.GCPChaosSpec'
        description: +optional
      historyLimit:
        description: |-
          +optional
          +kubebuilder:validation:Minimum=1
        type: integer
      httpChaos:
        $ref: '#/definitions/v1alpha1.HTTPChaosSpec'
        description: +optional
      ioChaos:
        $ref: '#/definitions/v1alpha1.IOChaosSpec'
        description: +optional
      jvmChaos:
        $ref: '#/definitions/v1alpha1.JVMChaosSpec'
        description: +optional
      kernelChaos:
        $ref: '#/definitions/v1alpha1.KernelChaosSpec'
        description: +optional
      networkChaos:
        $ref: '#/definitions/v1alpha1.NetworkChaosSpec'
        description: +optional
      physicalmachineChaos:
        $ref: '#/definitions/v1alpha1.PhysicalMachineChaosSpec'
        description: +optional
      podChaos:
        $ref: '#/definitions/v1alpha1.PodChaosSpec'
        description: +optional
      schedule:
        type: string
      startingDeadlineSeconds:
        description: |-
          +optional
          +nullable
          +kubebuilder:validation:Minimum=0
        type: integer
      stressChaos:
        $ref: '#/definitions/v1alpha1.StressChaosSpec'
        description: +optional
      timeChaos:
        $ref: '#/definitions/v1alpha1.TimeChaosSpec'
        description: +optional
      type:
        type: string
    type: object
  v1alpha1.ClockSpec:
    properties:
      clock-ids-slice:
        description: |-
          the identifier of the particular clock on which to act.
          More clock description in linux kernel can be found in man page of clock_getres, clock_gettime, clock_settime.
          Muti clock ids should be split with ","
        type: string
      pid:
        description: the pid of target program.
        type: integer
      time-offset:
        description: specifies the length of time offset.
        type: string
    type: object
  v1alpha1.ConditionalBranch:
    properties:
      expression:
        description: |-
          Expression is the expression for this conditional branch, expected type of result is boolean. If expression is empty, this branch will always be selected/the template will be spawned.
          +optional
        type: string
      target:
        description: Target is the name of other template, if expression is evaluated
          as true, this template will be spawned.
        type: string
    type: object
  v1alpha1.CorruptSpec:
    properties:
      correlation:
        default: "0"
        description: +optional
        type: string
      corrupt:
        type: string
    type: object
  v1alpha1.DNSChaosSpec:
    properties:
      action:
        description: |-
          Action defines the specific DNS chaos action.
          Supported action: error, random
          Default action: error
          +kubebuilder:validation:Enum=error;random
        type: string
      containerNames:
        description: |-
          ContainerNames indicates list of the name of affected container.
          If not set, the first container will be injected
          +optional
        items:
          type: string
        type: array
      duration:
        description: Duration represents the duration of the chaos action
        type: string
      mode:
        description: |-
          Mode defines the mode to run chaos action.
          Supported mode: one / all / fixed / fixed-percent / random-max-percent
          +kubebuilder:validation:Enum=one;all;fixed;fixed-percent;random-max-percent
        type: string
      patterns:
        description: "Choose which domain names to take effect, support the placeholder
          ? and wildcard *, or the Specified domain name.\nNote:\n     1. The wildcard
          * must be at the end of the string. For example, chaos-*.org is invalid.\n
          \    2. if the patterns is empty, will take effect on all the domain names.\nFor
          example:\n\t\tThe value is [\"google.com\", \"github.*\", \"chaos-mes?.org\"],\n\t\twill
          take effect on \"google.com\", \"github.com\" and \"chaos-mesh.org\"\n+optional"
        items:
          type: string
        type: array
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      selector:
        $ref: '#/definitions/v1alpha1.PodSelectorSpec'
        description: Selector is used to select pods that are used to inject chaos
          action.
      value:
        description: |-
          Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.
          If `FixedMode`, provide an integer of pods to do chaos action.
          If `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.
          IF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
          +optional
        type: string
    type: object
  v1alpha1.DelaySpec:
    properties:
      correlation:
        default: "0"
        description: +optional
        type: string
      jitter:
        default: 0ms
        description: |-
          +kubebuilder:validation:Pattern="^[0-9]+(\\.[0-9]+)?(ns|us|ms|s|m|h)$"
          +optional
        type: string
      latency:
        description: +kubebuilder:validation:Pattern="^[0-9]+(\\.[0-9]+)?(ns|us|ms|s|m|h)$"
        type: string
      reorder:
        $ref: '#/definitions/v1alpha1.ReorderSpec'
        description: +optional
    type: object
  v1alpha1.DiskFillSpec:
    properties:
      fill-by-fallocate:
        description: fill disk by fallocate
        type: boolean
      path:
        description: |-
          specifies the location to fill data in. if path not provided,
          payload will read/write from/into a temp file, temp file will be deleted after writing
        type: string
      size:
        description: |-
          specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000,
          K=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB
        type: string
    type: object
  v1alpha1.DiskPayloadSpec:
    properties:
      path:
        description: |-
          specifies the location to fill data in. if path not provided,
          payload will read/write from/into a temp file, temp file will be deleted after writing
        type: string
      payload-process-num:
        description: specifies the number of process work on writing, default 1, only
          1-255 is valid value
        type: integer
      size:
        description: |-
          specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000,
          K=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB
        type: string
    type: object
  v1alpha1.DuplicateSpec:
    properties:
      correlation:
        default: "0"
        description: +optional
        type: string
      duplicate:
        type: string
    type: object
  v1alpha1.FailKernRequest:
    properties:
      callchain:
        description: |-
          Callchain indicate a special call chain, such as:
              ext4_mount
                -> mount_subtree
                   -> ...
                      -> should_failslab
          With an optional set of predicates and an optional set of
          parameters, which used with predicates. You can read call chan
          and predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples
          to learn more.
          If no special call chain, just keep Callchain empty, which means it will fail at any call chain
          with slab alloc (eg: kmalloc).
        items:
          $ref: '#/definitions/v1alpha1.Frame'
        type: array
      failtype:
        description: |-
          FailType indicates what to fail, can be set to '0' / '1' / '2'
          If `0`, indicates slab to fail (should_failslab)
          If `1`, indicates alloc_page to fail (should_fail_alloc_page)
          If `2`, indicates bio to fail (should_fail_bio)
          You can read:
            1. https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html
            2. http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt
          to learn more
          +kubebuilder:validation:Maximum=2
          +kubebuilder:validation:Minimum=0
        type: integer
      headers:
        description: |-
          Headers indicates the appropriate kernel headers you need.
          Eg: "linux/mmzone.h", "linux/blkdev.h" and so on
        items:
          type: string
        type: array
      probability:
        description: |-
          Probability indicates the fails with probability.
          If you want 1%, please set this field with 1.
          +kubebuilder:validation:Minimum=0
          +kubebuilder:validation:Maximum=100
        type: integer
      times:
        description: |-
          Times indicates the max times of fails.
          +kubebuilder:validation:Minimum=0
        type: integer
    type: object
  v1alpha1.FileAppendSpec:
    properties:
      count:
        description: Count is the number of times to append the data.
        type: integer
      data:
        description: Data is the data for append.
        type: string
      file-name:
        description: FileName is the name of the file to be created, modified, deleted,
          renamed, or appended.
        type: string
    type: object
  v1alpha1.FileCreateSpec:
    properties:
      dir-name:
        description: DirName is the directory name to create or delete.
        type: string
      file-name:
        description: FileName is the name of the file to be created, modified, deleted,
          renamed, or appended.
        type: string
    type: object
  v1alpha1.FileDeleteSpec:
    properties:
      dir-name:
        description: DirName is the directory name to create or delete.
        type: string
      file-name:
        description: FileName is the name of the file to be created, modified, deleted,
          renamed, or appended.
        type: string
    type: object
  v1alpha1.FileModifyPrivilegeSpec:
    properties:
      file-name:
        description: FileName is the name of the file to be created, modified, deleted,
          renamed, or appended.
        type: string
      privilege:
        description: Privilege is the file privilege to be set.
        type: integer
    type: object
  v1alpha1.FileRenameSpec:
    properties:
      dest-file:
        description: DestFile is the name to be renamed.
        type: string
      source-file:
        description: SourceFile is the name need to be renamed.
        type: string
    type: object
  v1alpha1.FileReplaceSpec:
    properties:
      dest-string:
        description: DestStr is the destination string of the file.
        type: string
      file-name:
        description: FileName is the name of the file to be created, modified, deleted,
          renamed, or appended.
        type: string
      line:
        description: Line is the line number of the file to be replaced.
        type: integer
      origin-string:
        description: OriginStr is the origin string of the file.
        type: string
    type: object
  v1alpha1.Frame:
    properties:
      funcname:
        description: Funcname can be find from kernel source or `/proc/kallsyms`,
          such as `ext4_mount`
        type: string
      parameters:
        description: |-
          Parameters is used with predicate, for example, if you want to inject slab error
          in `d_alloc_parallel(struct dentry *parent, const struct qstr *name)` with a special
          name `bananas`, you need to set it to `struct dentry *parent, const struct qstr *name`
          otherwise omit it.
        type: string
      predicate:
        description: |-
          Predicate will access the arguments of this Frame, example with Parameters's, you can
          set it to `STRNCMP(name->name, "bananas", 8)` to make inject only with it, or omit it
          to inject for all d_alloc_parallel call chain.
        type: string
    type: object
  v1alpha1.GCPChaosSpec:
    properties:
      action:
        description: |-
          Action defines the specific gcp chaos action.
          Supported action: node-stop / node-reset / disk-loss
          Default action: node-stop
          +kubebuilder:validation:Enum=node-stop;node-reset;disk-loss
        type: string
      deviceNames:
        description: |-
          The device name of disks to detach.
          Needed in disk-loss.
          +ui:form:when=action=='disk-loss'
          +optional
        items:
          type: string
        type: array
      duration:
        description: |-
          Duration represents the duration of the chaos action.
          +optional
        type: string
      instance:
        description: Instance defines the name of the instance
        type: string
      project:
        description: Project defines the ID of gcp project.
        type: string
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      secretName:
        description: |-
          SecretName defines the name of kubernetes secret. It is used for GCP credentials.
          +optional
        type: string
      zone:
        description: Zone defines the zone of gcp project.
        type: string
    type: object
  v1alpha1.HTTPAbortSpec:
    properties:
      code:
        description: Code is a rule to select target by http status code in response
        type: string
      method:
        description: HTTP method
        type: string
      path:
        description: Match path of Uri with wildcard matches
        type: string
      port:
        description: The TCP port that the target service listens on
        type: integer
      proxy_ports:
        description: Composed with one of the port of HTTP connection, we will only
          attack HTTP connection with port inside proxy_ports
        items:
          type: integer
        type: array
      target:
        description: 'HTTP target: Request or Response'
        type: string
    type: object
  v1alpha1.HTTPChaosSpec:
    properties:
      abort:
        description: |-
          Abort is a rule to abort a http session.
          +optional
        type: boolean
      code:
        description: |-
          Code is a rule to select target by http status code in response.
          +optional
        type: integer
      delay:
        description: |-
          Delay represents the delay of the target request/response.
          A duration string is a possibly unsigned sequence of
          decimal numbers, each with optional fraction and a unit suffix,
          such as "300ms", "2h45m".
          Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
          +optional
        type: string
      duration:
        description: |-
          Duration represents the duration of the chaos action.
          +optional
        type: string
      method:
        description: |-
          Method is a rule to select target by http method in request.
          +optional
        type: string
      mode:
        description: |-
          Mode defines the mode to run chaos action.
          Supported mode: one / all / fixed / fixed-percent / random-max-percent
          +kubebuilder:validation:Enum=one;all;fixed;fixed-percent;random-max-percent
        type: string
      patch:
        $ref: '#/definitions/v1alpha1.PodHttpChaosPatchActions'
        description: |-
          Patch is a rule to patch some contents in target.
          +optional
      path:
        description: |-
          Path is a rule to select target by uri path in http request.
          +optional
        type: string
      port:
        description: Port represents the target port to be proxy of.
        type: integer
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      replace:
        $ref: '#/definitions/v1alpha1.PodHttpChaosReplaceActions'
        description: |-
          Replace is a rule to replace some contents in target.
          +optional
      request_headers:
        additionalProperties:
          type: string
        description: |-
          RequestHeaders is a rule to select target by http headers in request.
          The key-value pairs represent header name and header value pairs.
          +optional
        type: object
      response_headers:
        additionalProperties:
          type: string
        description: |-
          ResponseHeaders is a rule to select target by http headers in response.
          The key-value pairs represent header name and header value pairs.
          +optional
        type: object
      selector:
        $ref: '#/definitions/v1alpha1.PodSelectorSpec'
        description: Selector is used to select pods that are used to inject chaos
          action.
      target:
        description: |-
          Target is the object to be selected and injected.
          +kubebuilder:validation:Enum=Request;Response
        type: string
      tls:
        $ref: '#/definitions/v1alpha1.PodHttpChaosTLS'
        description: |-
          TLS is the tls config,
          will override PodHttpChaos if there are multiple HTTPChaos experiments are applied
          +optional
      value:
        description: |-
          Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.
          If `FixedMode`, provide an integer of pods to do chaos action.
          If `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.
          IF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
          +optional
        type: string
    type: object
  v1alpha1.HTTPConfigSpec:
    properties:
      file_path:
        description: The config file path
        type: string
    type: object
  v1alpha1.HTTPCriteria:
    properties:
      statusCode:
        description: |-
          StatusCode defines the expected http status code for the request.
          A statusCode string could be a single code (e.g. 200), or
          an inclusive range (e.g. 200-400, both `200` and `400` are included).
        type: string
    type: object
  v1alpha1.HTTPDelaySpec:
    properties:
      code:
        description: Code is a rule to select target by http status code in response
        type: string
      delay:
        description: Delay represents the delay of the target request/response
        type: string
      method:
        description: HTTP method
        type: string
      path:
        description: Match path of Uri with wildcard matches
        type: string
      port:
        description: The TCP port that the target service listens on
        type: integer
      proxy_ports:
        description: Composed with one of the port of HTTP connection, we will only
          attack HTTP connection with port inside proxy_ports
        items:
          type: integer
        type: array
      target:
        description: 'HTTP target: Request or Response'
        type: string
    type: object
  v1alpha1.HTTPRequestSpec:
    properties:
      count:
        description: The number of requests to send
        type: integer
      enable-conn-pool:
        description: Enable connection pool
        type: boolean
      url:
        description: Request to send"
        type: string
    type: object
  v1alpha1.HTTPStatusCheck:
    properties:
      body:
        description: +optional
        type: string
      criteria:
        $ref: '#/definitions/v1alpha1.HTTPCriteria'
        description: Criteria defines how to determine the result of the status check.
      headers:
        $ref: '#/definitions/http.Header'
        description: +optional
      method:
        description: |-
          +optional
          +kubebuilder:validation:Enum=GET;POST
          +kubebuilder:default=GET
        type: string
      url:
        type: string
    type: object
  v1alpha1.IOChaosSpec:
    properties:
      action:
        description: |-
          Action defines the specific pod chaos action.
          Supported action: latency / fault / attrOverride / mistake
          +kubebuilder:validation:Enum=latency;fault;attrOverride;mistake
        type: string
      attr:
        $ref: '#/definitions/v1alpha1.AttrOverrideSpec'
        description: |-
          Attr defines the overrided attribution
          +ui:form:when=action=='attrOverride'
          +optional
      containerNames:
        description: |-
          ContainerNames indicates list of the name of affected container.
          If not set, the first container will be injected
          +optional
        items:
          type: string
        type: array
      delay:
        description: |-
          Delay defines the value of I/O chaos action delay.
          A delay string is a possibly signed sequence of
          decimal numbers, each with optional fraction and a unit suffix,
          such as "300ms".
          Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
          +ui:form:when=action=='latency'
          +optional
        type: string
      duration:
        description: |-
          Duration represents the duration of the chaos action.
          It is required when the action is `PodFailureAction`.
          A duration string is a possibly signed sequence of
          decimal numbers, each with optional fraction and a unit suffix,
          such as "300ms", "-1.5h" or "2h45m".
          Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
          +optional
        type: string
      errno:
        description: |-
          Errno defines the error code that returned by I/O action.
          refer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html
          +ui:form:when=action=='fault'
          +optional
        type: integer
      methods:
        description: |-
          Methods defines the I/O methods for injecting I/O chaos action.
          default: all I/O methods.
          +optional
        items:
          type: string
        type: array
      mistake:
        $ref: '#/definitions/v1alpha1.MistakeSpec'
        description: |-
          Mistake defines what types of incorrectness are injected to IO operations
          +ui:form:when=action=='mistake'
          +optional
      mode:
        description: |-
          Mode defines the mode to run chaos action.
          Supported mode: one / all / fixed / fixed-percent / random-max-percent
          +kubebuilder:validation:Enum=one;all;fixed;fixed-percent;random-max-percent
        type: string
      path:
        description: |-
          Path defines the path of files for injecting I/O chaos action.
          +optional
        type: string
      percent:
        description: |-
          Percent defines the percentage of injection errors and provides a number from 0-100.
          default: 100.
          +optional
          +kubebuilder:default=100
        type: integer
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      selector:
        $ref: '#/definitions/v1alpha1.PodSelectorSpec'
        description: Selector is used to select pods that are used to inject chaos
          action.
      value:
        description: |-
          Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.
          If `FixedMode`, provide an integer of pods to do chaos action.
          If `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.
          IF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
          +optional
        type: string
      volumePath:
        description: VolumePath represents the mount path of injected volume
        type: string
    type: object
  v1alpha1.JVMChaosSpec:
    properties:
      action:
        description: |-
          Action defines the specific jvm chaos action.
          Supported action: latency;return;exception;stress;gc;ruleData
          +kubebuilder:validation:Enum=latency;return;exception;stress;gc;ruleData;mysql
        type: string
      class:
        description: |-
          +optional
          Java class
        type: string
      containerNames:
        description: |-
          ContainerNames indicates list of the name of affected container.
          If not set, the first container will be injected
          +optional
        items:
          type: string
        type: array
      cpuCount:
        description: |-
          +optional
          the CPU core number needs to use, only set it when action is stress
        type: integer
      database:
        description: |-
          the match database
          default value is "", means match all database
        type: string
      duration:
        description: |-
          Duration represents the duration of the chaos action
          +optional
        type: string
      exception:
        description: |-
          +optional
          the exception which needs to throw for action `exception`
          or the exception message needs to throw in action `mysql`
        type: string
      latency:
        description: |-
          +optional
          the latency duration for action 'latency', unit ms
          or the latency duration in action `mysql`
        type: integer
      memType:
        description: |-
          +optional
          the memory type needs to locate, only set it when action is stress, the value can be 'stack' or 'heap'
        type: string
      method:
        description: |-
          +optional
          the method in Java class
        type: string
      mode:
        description: |-
          Mode defines the mode to run chaos action.
          Supported mode: one / all / fixed / fixed-percent / random-max-percent
          +kubebuilder:validation:Enum=one;all;fixed;fixed-percent;random-max-percent
        type: string
      mysqlConnectorVersion:
        description: the version of mysql-connector-java, only support 5.X.X(set to
          "5") and 8.X.X(set to "8") now
        type: string
      name:
        description: |-
          +optional
          byteman rule name, should be unique, and will generate one if not set
        type: string
      pid:
        description: the pid of Java process which needs to attach
        type: integer
      port:
        description: |-
          +optional
          the port of agent server, default 9277
        type: integer
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      returnValue:
        description: |-
          +optional
          the return value for action 'return'
        type: string
      ruleData:
        description: |-
          +optional
          the byteman rule's data for action 'ruleData'
        type: string
      selector:
        $ref: '#/definitions/v1alpha1.PodSelectorSpec'
        description: Selector is used to select pods that are used to inject chaos
          action.
      sqlType:
        description: |-
          the match sql type
          default value is "", means match all SQL type.
          The value can be 'select', 'insert', 'update', 'delete', 'replace'.
        type: string
      table:
        description: |-
          the match table
          default value is "", means match all table
        type: string
      value:
        description: |-
          Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.
          If `FixedMode`, provide an integer of pods to do chaos action.
          If `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.
          IF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
          +optional
        type: string
    type: object
  v1alpha1.JVMExceptionSpec:
    properties:
      class:
        description: |-
          +optional
          Java class
        type: string
      exception:
        description: the exception which needs to throw for action `exception`
        type: string
      method:
        description: |-
          +optional
          the method in Java class
        type: string
      pid:
        description: the pid of Java process which needs to attach
        type: integer
      port:
        description: |-
          +optional
          the port of agent server, default 9277
        type: integer
    type: object
  v1alpha1.JVMGCSpec:
    properties:
      pid:
        description: the pid of Java process which needs to attach
        type: integer
      port:
        description: |-
          +optional
          the port of agent server, default 9277
        type: integer
    type: object
  v1alpha1.JVMLatencySpec:
    properties:
      class:
        description: |-
          +optional
          Java class
        type: string
      latency:
        description: the latency duration for action 'latency', unit ms
        type: integer
      method:
        description: |-
          +optional
          the method in Java class
        type: string
      pid:
        description: the pid of Java process which needs to attach
        type: integer
      port:
        description: |-
          +optional
          the port of agent server, default 9277
        type: integer
    type: object
  v1alpha1.JVMReturnSpec:
    properties:
      class:
        description: |-
          +optional
          Java class
        type: string
      method:
        description: |-
          +optional
          the method in Java class
        type: string
      pid:
        description: the pid of Java process which needs to attach
        type: integer
      port:
        description: |-
          +optional
          the port of agent server, default 9277
        type: integer
      value:
        description: the return value for action 'return'
        type: string
    type: object
  v1alpha1.JVMRuleDataSpec:
    properties:
      pid:
        description: the pid of Java process which needs to attach
        type: integer
      port:
        description: |-
          +optional
          the port of agent server, default 9277
        type: integer
      rule-data:
        description: RuleData used to save the rule file's data, will use it when
          recover
        type: string
    type: object
  v1alpha1.JVMStressSpec:
    properties:
      cpu-count:
        description: the CPU core number need to use, only set it when action is stress
        type: integer
      mem-type:
        description: the memory type need to locate, only set it when action is stress,
          the value can be 'stack' or 'heap'
        type: string
      pid:
        description: the pid of Java process which needs to attach
        type: integer
      port:
        description: |-
          +optional
          the port of agent server, default 9277
        type: integer
    type: object
  v1alpha1.KafkaFillSpec:
    properties:
      host:
        description: The host of kafka server
        type: string
      maxBytes:
        description: The max bytes to fill
        type: integer
      messageSize:
        description: The size of each message
        type: integer
      password:
        description: The password of kafka client
        type: string
      port:
        description: The port of kafka server
        type: integer
      reloadCommand:
        description: The command to reload kafka config
        type: string
      topic:
        description: The topic to attack
        type: string
      username:
        description: The username of kafka client
        type: string
    type: object
  v1alpha1.KafkaFloodSpec:
    properties:
      host:
        description: The host of kafka server
        type: string
      messageSize:
        description: The size of each message
        type: integer
      password:
        description: The password of kafka client
        type: string
      port:
        description: The port of kafka server
        type: integer
      threads:
        description: The number of worker threads
        type: integer
      topic:
        description: The topic to attack
        type: string
      username:
        description: The username of kafka client
        type: string
    type: object
  v1alpha1.KafkaIOSpec:
    properties:
      configFile:
        description: The path of server config
        type: string
      nonReadable:
        description: Make kafka cluster non-readable
        type: boolean
      nonWritable:
        description: Make kafka cluster non-writable
        type: boolean
      topic:
        description: The topic to attack
        type: string
    type: object
  v1alpha1.KernelChaosSpec:
    properties:
      containerNames:
        description: |-
          ContainerNames indicates list of the name of affected container.
          If not set, the first container will be injected
          +optional
        items:
          type: string
        type: array
      duration:
        description: Duration represents the duration of the chaos action
        type: string
      failKernRequest:
        $ref: '#/definitions/v1alpha1.FailKernRequest'
        description: FailKernRequest defines the request of kernel injection
      mode:
        description: |-
          Mode defines the mode to run chaos action.
          Supported mode: one / all / fixed / fixed-percent / random-max-percent
          +kubebuilder:validation:Enum=one;all;fixed;fixed-percent;random-max-percent
        type: string
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      selector:
        $ref: '#/definitions/v1alpha1.PodSelectorSpec'
        description: Selector is used to select pods that are used to inject chaos
          action.
      value:
        description: |-
          Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.
          If `FixedMode`, provide an integer of pods to do chaos action.
          If `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.
          IF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
          +optional
        type: string
    type: object
  v1alpha1.LossSpec:
    properties:
      correlation:
        default: "0"
        description: +optional
        type: string
      loss:
        type: string
    type: object
  v1alpha1.MemoryStressor:
    properties:
      oomScoreAdj:
        description: |-
          OOMScoreAdj sets the oom_score_adj of the stress process. See `man 5 proc` to know more
          about this option.
          +kubebuilder:validation:Minimum=-1000
          +kubebuilder:validation:Maximum=1000
          +kubebuilder:default=0
          +optional
        type: integer
      options:
        description: |-
          extend stress-ng options
          +optional
        items:
          type: string
        type: array
      size:
        description: |-
          Size specifies N bytes consumed per vm worker, default is the total available memory.
          One can specify the size as % of total available memory or in units of B, KB/KiB,
          MB/MiB, GB/GiB, TB/TiB.
          +optional
        type: string
      workers:
        description: |-
          Workers specifies N workers to apply the stressor.
          Maximum 8192 workers can run by stress-ng
          +kubebuilder:validation:Maximum=8192
        type: integer
    type: object
  v1alpha1.MistakeSpec:
    properties:
      filling:
        description: |-
          Filling determines what is filled in the mistake data.
          +optional
          +kubebuilder:validation:Enum=zero;random
        type: string
      maxLength:
        description: |-
          Max length of each wrong data segment in bytes
          +optional
          +kubebuilder:validation:Minimum=1
        type: integer
      maxOccurrences:
        description: |-
          There will be [1, MaxOccurrences] segments of wrong data.
          +optional
          +kubebuilder:validation:Minimum=1
        type: integer
    type: object
  v1alpha1.NetworkBandwidthSpec:
    properties:
      buffer:
        description: +kubebuilder:validation:Minimum=1
        type: integer
      device:
        type: string
      hostname:
        type: string
      ip-address:
        type: string
      limit:
        description: +kubebuilder:validation:Minimum=1
        type: integer
      minburst:
        type: integer
      peakrate:
        type: integer
      rate:
        type: string
    type: object
  v1alpha1.NetworkChaosSpec:
    properties:
      action:
        description: |-
          Action defines the specific network chaos action.
          Supported action: partition, netem, delay, loss, duplicate, corrupt
          Default action: delay
          +kubebuilder:validation:Enum=netem;delay;loss;duplicate;corrupt;partition;bandwidth
        type: string
      bandwidth:
        $ref: '#/definitions/v1alpha1.BandwidthSpec'
        description: |-
          Bandwidth represents the detail about bandwidth control action
          +ui:form:when=action=='bandwidth'
          +optional
      corrupt:
        $ref: '#/definitions/v1alpha1.CorruptSpec'
        description: |-
          Corrupt represents the detail about corrupt action
          +ui:form:when=action=='corrupt'
          +optional
      delay:
        $ref: '#/definitions/v1alpha1.DelaySpec'
        description: |-
          Delay represents the detail about delay action
          +ui:form:when=action=='delay'
          +optional
      device:
        description: |-
          Device represents the network device to be affected.
          +optional
        type: string
      direction:
        description: |-
          Direction represents the direction, this applies on netem and network partition action
          +optional
          +kubebuilder:validation:Enum=to;from;both
          +kubebuilder:default=to
        type: string
      duplicate:
        $ref: '#/definitions/v1alpha1.DuplicateSpec'
        description: |-
          DuplicateSpec represents the detail about loss action
          +ui:form:when=action=='duplicate'
          +optional
      duration:
        description: Duration represents the duration of the chaos action
        type: string
      externalTargets:
        description: |-
          ExternalTargets represents network targets outside k8s
          +optional
        items:
          type: string
        type: array
      loss:
        $ref: '#/definitions/v1alpha1.LossSpec'
        description: |-
          Loss represents the detail about loss action
          +ui:form:when=action=='loss'
          +optional
      mode:
        description: |-
          Mode defines the mode to run chaos action.
          Supported mode: one / all / fixed / fixed-percent / random-max-percent
          +kubebuilder:validation:Enum=one;all;fixed;fixed-percent;random-max-percent
        type: string
      rate:
        $ref: '#/definitions/v1alpha1.RateSpec'
        description: |-
          Rate represents the detail about rate control action
          +ui:form:when=action=='rate'
          +optional
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      selector:
        $ref: '#/definitions/v1alpha1.PodSelectorSpec'
        description: Selector is used to select pods that are used to inject chaos
          action.
      target:
        $ref: '#/definitions/v1alpha1.PodSelector'
        description: |-
          Target represents network target, this applies on netem and network partition action
          +optional
      targetDevice:
        description: |-
          TargetDevice represents the network device to be affected in target scope.
          +optional
        type: string
      value:
        description: |-
          Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.
          If `FixedMode`, provide an integer of pods to do chaos action.
          If `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.
          IF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
          +optional
        type: string
    type: object
  v1alpha1.NetworkCorruptSpec:
    properties:
      correlation:
        description: correlation is percentage (10 is 10%)
        type: string
      device:
        description: the network interface to impact
        type: string
      egress-port:
        description: |-
          only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.
          it can only be used in conjunction with -p tcp or -p udp
        type: string
      hostname:
        description: only impact traffic to these hostnames
        type: string
      ip-address:
        description: only impact egress traffic to these IP addresses
        type: string
      ip-protocol:
        description: 'only impact traffic using this IP protocol, supported: tcp,
          udp, icmp, all'
        type: string
      percent:
        description: percentage of packets to corrupt (10 is 10%)
        type: string
      source-port:
        description: |-
          only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.
          it can only be used in conjunction with -p tcp or -p udp
        type: string
    type: object
  v1alpha1.NetworkDNSSpec:
    properties:
      dns-domain-name:
        description: map this host to specified IP
        type: string
      dns-ip:
        description: map specified host to this IP address
        type: string
      dns-server:
        description: update the DNS server in /etc/resolv.conf with this value
        type: string
    type: object
  v1alpha1.NetworkDelaySpec:
    properties:
      accept-tcp-flags:
        description: |-
          only the packet which match the tcp flag can be accepted, others will be dropped.
          only set when the IPProtocol is tcp, used for partition.
        type: string
      correlation:
        description: correlation is percentage (10 is 10%)
        type: string
      device:
        description: the network interface to impact
        type: string
      egress-port:
        description: |-
          only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.
          it can only be used in conjunction with -p tcp or -p udp
        type: string
      hostname:
        description: only impact traffic to these hostnames
        type: string
      ip-address:
        description: only impact egress traffic to these IP addresses
        type: string
      ip-protocol:
        description: 'only impact traffic using this IP protocol, supported: tcp,
          udp, icmp, all'
        type: string
      jitter:
        description: 'jitter time, time units: ns, us (or µs), ms, s, m, h.'
        type: string
      latency:
        description: 'delay egress time, time units: ns, us (or µs), ms, s, m, h.'
        type: string
      source-port:
        description: |-
          only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.
          it can only be used in conjunction with -p tcp or -p udp
        type: string
    type: object
  v1alpha1.NetworkDownSpec:
    properties:
      device:
        description: The network interface to impact
        type: string
      duration:
        description: 'NIC down time, time units: ns, us (or µs), ms, s, m, h.'
        type: string
    type: object
  v1alpha1.NetworkDuplicateSpec:
    properties:
      correlation:
        description: correlation is percentage (10 is 10%)
        type: string
      device:
        description: the network interface to impact
        type: string
      egress-port:
        description: |-
          only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.
          it can only be used in conjunction with -p tcp or -p udp
        type: string
      hostname:
        description: only impact traffic to these hostnames
        type: string
      ip-address:
        description: only impact egress traffic to these IP addresses
        type: string
      ip-protocol:
        description: 'only impact traffic using this IP protocol, supported: tcp,
          udp, icmp, all'
        type: string
      percent:
        description: percentage of packets to duplicate (10 is 10%)
        type: string
      source-port:
        description: |-
          only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.
          it can only be used in conjunction with -p tcp or -p udp
        type: string
    type: object
  v1alpha1.NetworkFloodSpec:
    properties:
      duration:
        description: The number of seconds to run the iperf test
        type: string
      ip-address:
        description: Generate traffic to this IP address
        type: string
      parallel:
        description: The number of iperf parallel client threads to run
        type: integer
      port:
        description: Generate traffic to this port on the IP address
        type: string
      rate:
        description: The speed of network traffic, allows bps, kbps, mbps, gbps, tbps
          unit. bps means bytes per second
        type: string
    type: object
  v1alpha1.NetworkLossSpec:
    properties:
      correlation:
        description: correlation is percentage (10 is 10%)
        type: string
      device:
        description: the network interface to impact
        type: string
      egress-port:
        description: |-
          only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.
          it can only be used in conjunction with -p tcp or -p udp
        type: string
      hostname:
        description: only impact traffic to these hostnames
        type: string
      ip-address:
        description: only impact egress traffic to these IP addresses
        type: string
      ip-protocol:
        description: 'only impact traffic using this IP protocol, supported: tcp,
          udp, icmp, all'
        type: string
      percent:
        description: percentage of packets to loss (10 is 10%)
        type: string
      source-port:
        description: |-
          only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.
          it can only be used in conjunction with -p tcp or -p udp
        type: string
    type: object
  v1alpha1.NetworkPartitionSpec:
    properties:
      accept-tcp-flags:
        description: |-
          only the packet which match the tcp flag can be accepted, others will be dropped.
          only set when the IPProtocol is tcp, used for partition.
        type: string
      device:
        description: the network interface to impact
        type: string
      direction:
        description: |-
          specifies the partition direction, values can be 'from', 'to'.
          'from' means packets coming from the 'IPAddress' or 'Hostname' and going to your server,
          'to' means packets originating from your server and going to the 'IPAddress' or 'Hostname'.
        type: string
      hostname:
        description: only impact traffic to these hostnames
        type: string
      ip-address:
        description: only impact egress traffic to these IP addresses
        type: string
      ip-protocol:
        description: only impact egress traffic to these IP addresses
        type: string
    type: object
  v1alpha1.PMJVMMySQLSpec:
    properties:
      database:
        description: |-
          the match database
          default value is "", means match all database
        type: string
      exception:
        description: |-
          The exception which needs to throw for action `exception`
          or the exception message needs to throw in action `mysql`
        type: string
      latency:
        description: |-
          The latency duration for action 'latency'
          or the latency duration in action `mysql`
        type: integer
      mysqlConnectorVersion:
        description: the version of mysql-connector-java, only support 5.X.X(set to
          "5") and 8.X.X(set to "8") now
        type: string
      pid:
        description: the pid of Java process which needs to attach
        type: integer
      port:
        description: |-
          +optional
          the port of agent server, default 9277
        type: integer
      sqlType:
        description: |-
          the match sql type
          default value is "", means match all SQL type.
          The value can be 'select', 'insert', 'update', 'delete', 'replace'.
        type: string
      table:
        description: |-
          the match table
          default value is "", means match all table
        type: string
    type: object
  v1alpha1.PhysicalMachineChaosSpec:
    properties:
      action:
        description: +kubebuilder:validation:Enum=stress-cpu;stress-mem;disk-read-payload;disk-write-payload;disk-fill;network-corrupt;network-duplicate;network-loss;network-delay;network-partition;network-dns;network-bandwidth;network-flood;network-down;process;jvm-exception;jvm-gc;jvm-latency;jvm-return;jvm-stress;jvm-rule-data;jvm-mysql;clock;redis-expiration;redis-penetration;redis-cacheLimit;redis-restart;redis-stop;kafka-fill;kafka-flood;kafka-io;file-create;file-modify;file-delete;file-rename;file-append;file-replace;vm;user_defined
        type: string
      address:
        description: |-
          DEPRECATED: Use Selector instead.
          Only one of Address and Selector could be specified.
          +optional
        items:
          type: string
        type: array
      clock:
        $ref: '#/definitions/v1alpha1.ClockSpec'
        description: |-
          +ui:form:when=action=='clock'
          +optional
      disk-fill:
        $ref: '#/definitions/v1alpha1.DiskFillSpec'
        description: |-
          +ui:form:when=action=='disk-fill'
          +optional
      disk-read-payload:
        $ref: '#/definitions/v1alpha1.DiskPayloadSpec'
        description: |-
          +ui:form:when=action=='disk-read-payload'
          +optional
      disk-write-payload:
        $ref: '#/definitions/v1alpha1.DiskPayloadSpec'
        description: |-
          +ui:form:when=action=='disk-write-payload'
          +optional
      duration:
        description: |-
          Duration represents the duration of the chaos action
          +optional
        type: string
      file-append:
        $ref: '#/definitions/v1alpha1.FileAppendSpec'
        description: |-
          +ui:form:when=action=='file-append'
          +optional
      file-create:
        $ref: '#/definitions/v1alpha1.FileCreateSpec'
        description: |-
          +ui:form:when=action=='file-create'
          +optional
      file-delete:
        $ref: '#/definitions/v1alpha1.FileDeleteSpec'
        description: |-
          +ui:form:when=action=='file-delete'
          +optional
      file-modify:
        $ref: '#/definitions/v1alpha1.FileModifyPrivilegeSpec'
        description: |-
          +ui:form:when=action=='file-modify'
          +optional
      file-rename:
        $ref: '#/definitions/v1alpha1.FileRenameSpec'
        description: |-
          +ui:form:when=action=='file-create'
          +optional
      file-replace:
        $ref: '#/definitions/v1alpha1.FileReplaceSpec'
        description: |-
          +ui:form:when=action=='file-replace'
          +optional
      http-abort:
        $ref: '#/definitions/v1alpha1.HTTPAbortSpec'
        description: |-
          +ui:form:when=action=='http-abort'
          +optional
      http-config:
        $ref: '#/definitions/v1alpha1.HTTPConfigSpec'
        description: |-
          +ui:form:when=action=='http-config'
          +optional
      http-delay:
        $ref: '#/definitions/v1alpha1.HTTPDelaySpec'
        description: |-
          +ui:form:when=action=='http-delay'
          +optional
      http-request:
        $ref: '#/definitions/v1alpha1.HTTPRequestSpec'
        description: |-
          +ui:form:when=action=='http-request'
          +optional
      jvm-exception:
        $ref: '#/definitions/v1alpha1.JVMExceptionSpec'
        description: |-
          +ui:form:when=action=='jvm-exception'
          +optional
      jvm-gc:
        $ref: '#/definitions/v1alpha1.JVMGCSpec'
        description: |-
          +ui:form:when=action=='jvm-gc'
          +optional
      jvm-latency:
        $ref: '#/definitions/v1alpha1.JVMLatencySpec'
        description: |-
          +ui:form:when=action=='jvm-latency'
          +optional
      jvm-mysql:
        $ref: '#/definitions/v1alpha1.PMJVMMySQLSpec'
        description: |-
          +ui:form:when=action=='jvm-mysql'
          +optional
      jvm-return:
        $ref: '#/definitions/v1alpha1.JVMReturnSpec'
        description: |-
          +ui:form:when=action=='jvm-return'
          +optional
      jvm-rule-data:
        $ref: '#/definitions/v1alpha1.JVMRuleDataSpec'
        description: |-
          +ui:form:when=action=='jvm-rule-data'
          +optional
      jvm-stress:
        $ref: '#/definitions/v1alpha1.JVMStressSpec'
        description: |-
          +ui:form:when=action=='jvm-stress'
          +optional
      kafka-fill:
        $ref: '#/definitions/v1alpha1.KafkaFillSpec'
        description: |-
          +ui:form:when=action=='kafka-fill'
          +optional
      kafka-flood:
        $ref: '#/definitions/v1alpha1.KafkaFloodSpec'
        description: |-
          +ui:form:when=action=='kafka-flood'
          +optional
      kafka-io:
        $ref: '#/definitions/v1alpha1.KafkaIOSpec'
        description: |-
          +ui:form:when=action=='kafka-io'
          +optional
      mode:
        description: |-
          Mode defines the mode to run chaos action.
          Supported mode: one / all / fixed / fixed-percent / random-max-percent
          +kubebuilder:validation:Enum=one;all;fixed;fixed-percent;random-max-percent
        type: string
      network-bandwidth:
        $ref: '#/definitions/v1alpha1.NetworkBandwidthSpec'
        description: |-
          +ui:form:when=action=='network-bandwidth'
          +optional
      network-corrupt:
        $ref: '#/definitions/v1alpha1.NetworkCorruptSpec'
        description: |-
          +ui:form:when=action=='network-corrupt'
          +optional
      network-delay:
        $ref: '#/definitions/v1alpha1.NetworkDelaySpec'
        description: |-
          +ui:form:when=action=='network-delay'
          +optional
      network-dns:
        $ref: '#/definitions/v1alpha1.NetworkDNSSpec'
        description: |-
          +ui:form:when=action=='network-dns'
          +optional
      network-down:
        $ref: '#/definitions/v1alpha1.NetworkDownSpec'
        description: |-
          +ui:form:when=action=='network-down'
          +optional
      network-duplicate:
        $ref: '#/definitions/v1alpha1.NetworkDuplicateSpec'
        description: |-
          +ui:form:when=action=='network-duplicate'
          +optional
      network-flood:
        $ref: '#/definitions/v1alpha1.NetworkFloodSpec'
        description: |-
          +ui:form:when=action=='network-flood'
          +optional
      network-loss:
        $ref: '#/definitions/v1alpha1.NetworkLossSpec'
        description: |-
          +ui:form:when=action=='network-loss'
          +optional
      network-partition:
        $ref: '#/definitions/v1alpha1.NetworkPartitionSpec'
        description: |-
          +ui:form:when=action=='network-partition'
          +optional
      process:
        $ref: '#/definitions/v1alpha1.ProcessSpec'
        description: |-
          +ui:form:when=action=='process'
          +optional
      redis-cacheLimit:
        $ref: '#/definitions/v1alpha1.RedisCacheLimitSpec'
        description: |-
          +ui:form:when=action=='redis-cacheLimit'
          +optional
      redis-expiration:
        $ref: '#/definitions/v1alpha1.RedisExpirationSpec'
        description: |-
          +ui:form:when=action=='redis-expiration'
          +optional
      redis-penetration:
        $ref: '#/definitions/v1alpha1.RedisPenetrationSpec'
        description: |-
          +ui:form:when=action=='redis-penetration'
          +optional
      redis-restart:
        $ref: '#/definitions/v1alpha1.RedisSentinelRestartSpec'
        description: |-
          +ui:form:when=action=='redis-restart'
          +optional
      redis-stop:
        $ref: '#/definitions/v1alpha1.RedisSentinelStopSpec'
        description: |-
          +ui:form:when=action=='redis-stop'
          +optional
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      selector:
        $ref: '#/definitions/v1alpha1.PhysicalMachineSelectorSpec'
        description: |-
          Selector is used to select physical machines that are used to inject chaos action.
          +optional
      stress-cpu:
        $ref: '#/definitions/v1alpha1.StressCPUSpec'
        description: |-
          +ui:form:when=action=='stress-cpu'
          +optional
      stress-mem:
        $ref: '#/definitions/v1alpha1.StressMemorySpec'
        description: |-
          +ui:form:when=action=='stress-mem'
          +optional
      user_defined:
        $ref: '#/definitions/v1alpha1.UserDefinedSpec'
        description: |-
          +ui:form:when=action=='user_defined'
          +optional
      value:
        description: |-
          Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.
          If `FixedMode`, provide an integer of physical machines to do chaos action.
          If `FixedPercentMode`, provide a number from 0-100 to specify the percent of physical machines the server can do chaos action.
          IF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
          +optional
        type: string
      vm:
        $ref: '#/definitions/v1alpha1.VMSpec'
        description: |-
          +ui:form:when=action=='vm'
          +optional
    type: object
  v1alpha1.PhysicalMachineSelectorSpec:
    properties:
      annotationSelectors:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to select objects.
          A selector based on annotations.
          +optional
        type: object
      fieldSelectors:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to select objects.
          A selector based on fields.
          +optional
        type: object
      labelSelectors:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to select objects.
          A selector based on labels.
          +optional
        type: object
      namespaces:
        description: |-
          Namespaces is a set of namespace to which objects belong.
          +optional
        items:
          type: string
        type: array
      physicalMachines:
        additionalProperties:
          items:
            type: string
          type: array
        description: |-
          PhysicalMachines is a map of string keys and a set values that used to select physical machines.
          The key defines the namespace which physical machine belong,
          and each value is a set of physical machine names.
          +optional
        type: object
    type: object
  v1alpha1.PodChaosSpec:
    properties:
      action:
        description: |-
          Action defines the specific pod chaos action.
          Supported action: pod-kill / pod-failure / container-kill
          Default action: pod-kill
          +kubebuilder:validation:Enum=pod-kill;pod-failure;container-kill
        type: string
      containerNames:
        description: |-
          ContainerNames indicates list of the name of affected container.
          If not set, the first container will be injected
          +optional
        items:
          type: string
        type: array
      duration:
        description: |-
          Duration represents the duration of the chaos action.
          It is required when the action is `PodFailureAction`.
          A duration string is a possibly signed sequence of
          decimal numbers, each with optional fraction and a unit suffix,
          such as "300ms", "-1.5h" or "2h45m".
          Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
          +optional
        type: string
      gracePeriod:
        description: |-
          GracePeriod is used in pod-kill action. It represents the duration in seconds before the pod should be deleted.
          Value must be non-negative integer. The default value is zero that indicates delete immediately.
          +optional
          +kubebuilder:validation:Minimum=0
        type: integer
      mode:
        description: |-
          Mode defines the mode to run chaos action.
          Supported mode: one / all / fixed / fixed-percent / random-max-percent
          +kubebuilder:validation:Enum=one;all;fixed;fixed-percent;random-max-percent
        type: string
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      selector:
        $ref: '#/definitions/v1alpha1.PodSelectorSpec'
        description: Selector is used to select pods that are used to inject chaos
          action.
      value:
        description: |-
          Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.
          If `FixedMode`, provide an integer of pods to do chaos action.
          If `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.
          IF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
          +optional
        type: string
    type: object
  v1alpha1.PodHttpChaosPatchActions:
    properties:
      body:
        $ref: '#/definitions/v1alpha1.PodHttpChaosPatchBodyAction'
        description: |-
          Body is a rule to patch message body of target.
          +optional
      headers:
        description: |-
          Headers is a rule to append http headers of target.
          For example: `[["Set-Cookie", "<one cookie>"], ["Set-Cookie", "<another cookie>"]]`.
          +optional
        items:
          items:
            type: string
          type: array
        type: array
      queries:
        description: |-
          Queries is a rule to append uri queries of target(Request only).
          For example: `[["foo", "bar"], ["foo", "unknown"]]`.
          +optional
        items:
          items:
            type: string
          type: array
        type: array
    type: object
  v1alpha1.PodHttpChaosPatchBodyAction:
    properties:
      type:
        description: Type represents the patch type, only support `JSON` as [merge
          patch json](https://tools.ietf.org/html/rfc7396) currently.
        type: string
      value:
        description: Value is the patch contents.
        type: string
    type: object
  v1alpha1.PodHttpChaosReplaceActions:
    properties:
      body:
        description: |-
          Body is a rule to replace http message body in target.
          +optional
        items:
          type: integer
        type: array
      code:
        description: |-
          Code is a rule to replace http status code in response.
          +optional
        type: integer
      headers:
        additionalProperties:
          type: string
        description: |-
          Headers is a rule to replace http headers of target.
          The key-value pairs represent header name and header value pairs.
          +optional
        type: object
      method:
        description: |-
          Method is a rule to replace http method in request.
          +optional
        type: string
      path:
        description: |-
          Path is rule to to replace uri path in http request.
          +optional
        type: string
      queries:
        additionalProperties:
          type: string
        description: |-
          Queries is a rule to replace uri queries in http request.
          For example, with value `{ "foo": "unknown" }`, the `/?foo=bar` will be altered to `/?foo=unknown`,
          +optional
        type: object
    type: object
  v1alpha1.PodHttpChaosTLS:
    properties:
      caName:
        description: |-
          CAName represents the data name of ca file in secret, `ca.crt` for example
          +optional
        type: string
      certName:
        description: CertName represents the data name of cert file in secret, `tls.crt`
          for example
        type: string
      keyName:
        description: KeyName represents the data name of key file in secret, `tls.key`
          for example
        type: string
      secretName:
        description: SecretName represents the name of required secret resource
        type: string
      secretNamespace:
        description: SecretNamespace represents the namespace of required secret resource
        type: string
    type: object
  v1alpha1.PodSelector:
    properties:
      mode:
        description: |-
          Mode defines the mode to run chaos action.
          Supported mode: one / all / fixed / fixed-percent / random-max-percent
          +kubebuilder:validation:Enum=one;all;fixed;fixed-percent;random-max-percent
        type: string
      selector:
        $ref: '#/definitions/v1alpha1.PodSelectorSpec'
        description: Selector is used to select pods that are used to inject chaos
          action.
      value:
        description: |-
          Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.
          If `FixedMode`, provide an integer of pods to do chaos action.
          If `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.
          IF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
          +optional
        type: string
    type: object
  v1alpha1.PodSelectorSpec:
    properties:
      annotationSelectors:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to select objects.
          A selector based on annotations.
          +optional
        type: object
      fieldSelectors:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to select objects.
          A selector based on fields.
          +optional
        type: object
      labelSelectors:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to select objects.
          A selector based on labels.
          +optional
        type: object
      namespaces:
        description: |-
          Namespaces is a set of namespace to which objects belong.
          +optional
        items:
          type: string
        type: array
      nodeSelectors:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to select nodes.
          Selector which must match a node's labels,
          and objects must belong to these selected nodes.
          +optional
        type: object
      nodes:
        description: |-
          Nodes is a set of node name and objects must belong to these nodes.
          +optional
        items:
          type: string
        type: array
      podPhaseSelectors:
        description: |-
          PodPhaseSelectors is a set of condition of a pod at the current time.
          supported value: Pending / Running / Succeeded / Failed / Unknown
          +optional
        items:
          type: string
        type: array
      pods:
        additionalProperties:
          items:
            type: string
          type: array
        description: |-
          Pods is a map of string keys and a set values that used to select pods.
          The key defines the namespace which pods belong,
          and the each values is a set of pod names.
          +optional
        type: object
    type: object
  v1alpha1.ProcessSpec:
    properties:
      process:
        description: the process name or the process ID
        type: string
      recoverCmd:
        description: the command to be run when recovering experiment
        type: string
      signal:
        description: the signal number to send
        type: integer
    type: object
  v1alpha1.RateSpec:
    properties:
      rate:
        description: Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps,
          kbps, mbps, gbps, tbps unit. bps means bytes per second.
        type: string
    type: object
  v1alpha1.RedisCacheLimitSpec:
    properties:
      addr:
        description: The adress of Redis server
        type: string
      cacheSize:
        description: The size of `maxmemory`
        type: string
      password:
        description: The password of Redis server
        type: string
      percent:
        description: Specifies maxmemory as a percentage of the original value
        type: string
    type: object
  v1alpha1.RedisExpirationSpec:
    properties:
      addr:
        description: The adress of Redis server
        type: string
      expiration:
        description: The expiration of the keys
        type: string
      key:
        description: The keys to be expired
        type: string
      option:
        description: Additional options for `expiration`
        type: string
      password:
        description: The password of Redis server
        type: string
    type: object
  v1alpha1.RedisPenetrationSpec:
    properties:
      addr:
        description: The adress of Redis server
        type: string
      password:
        description: The password of Redis server
        type: string
      requestNum:
        description: The number of requests to be sent
        type: integer
    type: object
  v1alpha1.RedisSentinelRestartSpec:
    properties:
      addr:
        description: The adress of Redis server
        type: string
      conf:
        description: The path of Sentinel conf
        type: string
      flushConfig:
        description: The control flag determines whether to flush config
        type: boolean
      password:
        description: The password of Redis server
        type: string
      redisPath:
        description: The path of `redis-server` command-line tool
        type: boolean
    type: object
  v1alpha1.RedisSentinelStopSpec:
    properties:
      addr:
        description: The adress of Redis server
        type: string
      conf:
        description: The path of Sentinel conf
        type: string
      flushConfig:
        description: The control flag determines whether to flush config
        type: boolean
      password:
        description: The password of Redis server
        type: string
      redisPath:
        description: The path of `redis-server` command-line tool
        type: boolean
    type: object
  v1alpha1.ReorderSpec:
    properties:
      correlation:
        default: "0"
        description: +optional
        type: string
      gap:
        type: integer
      reorder:
        type: string
    type: object
  v1alpha1.Schedule:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          Finalizers may be processed and removed in any order.  Order is NOT enforced
          because it introduces significant risk of stuck finalizers.
          finalizers is a shared field, any actor with permission can reorder it.
          If the finalizer list is processed in order, then this can lead to a situation
          in which the component responsible for the first finalizer in the list is
          waiting for a signal (field value, external system, or other) produced by a
          component responsible for a finalizer later in the list, resulting in a deadlock.
          Without enforced ordering finalizers are free to order amongst themselves and
          are not vulnerable to ordering changes in the list.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will return a 409.

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
          +optional
        type: object
      managedFields:
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          +optional
        items:
          $ref: '#/definitions/v1.ManagedFieldsEntry'
        type: array
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1alpha1.ScheduleSpec'
      status:
        $ref: '#/definitions/v1alpha1.ScheduleStatus'
        description: +optional
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
          +optional
        type: string
    type: object
  v1alpha1.ScheduleSpec:
    properties:
      awsChaos:
        $ref: '#/definitions/v1alpha1.AWSChaosSpec'
        description: +optional
      azureChaos:
        $ref: '#/definitions/v1alpha1.AzureChaosSpec'
        description: +optional
      blockChaos:
        $ref: '#/definitions/v1alpha1.BlockChaosSpec'
        description: +optional
      concurrencyPolicy:
        description: |-
          +optional
          +kubebuilder:default=Forbid
          +kubebuilder:validation:Enum=Forbid;Allow
        type: string
      dnsChaos:
        $ref: '#/definitions/v1alpha1.DNSChaosSpec'
        description: +optional
      gcpChaos:
        $ref: '#/definitions/v1alpha1.GCPChaosSpec'
        description: +optional
      historyLimit:
        description: |-
          +optional
          +kubebuilder:validation:Minimum=1
        type: integer
      httpChaos:
        $ref: '#/definitions/v1alpha1.HTTPChaosSpec'
        description: +optional
      ioChaos:
        $ref: '#/definitions/v1alpha1.IOChaosSpec'
        description: +optional
      jvmChaos:
        $ref: '#/definitions/v1alpha1.JVMChaosSpec'
        description: +optional
      kernelChaos:
        $ref: '#/definitions/v1alpha1.KernelChaosSpec'
        description: +optional
      networkChaos:
        $ref: '#/definitions/v1alpha1.NetworkChaosSpec'
        description: +optional
      physicalmachineChaos:
        $ref: '#/definitions/v1alpha1.PhysicalMachineChaosSpec'
        description: +optional
      podChaos:
        $ref: '#/definitions/v1alpha1.PodChaosSpec'
        description: +optional
      schedule:
        type: string
      startingDeadlineSeconds:
        description: |-
          +optional
          +nullable
          +kubebuilder:validation:Minimum=0
          +kubebuilder:validation:ExclusiveMinimum=true
        type: integer
      stressChaos:
        $ref: '#/definitions/v1alpha1.StressChaosSpec'
        description: +optional
      timeChaos:
        $ref: '#/definitions/v1alpha1.TimeChaosSpec'
        description: +optional
      type:
        type: string
      workflow:
        $ref: '#/definitions/v1alpha1.WorkflowSpec'
        description: +optional
    type: object
  v1alpha1.ScheduleStatus:
    properties:
      active:
        description: +optional
        items:
          $ref: '#/definitions/v1.ObjectReference'
        type: array
      time:
        description: |-
          +optional
          +nullable
        type: string
    type: object
  v1alpha1.StatusCheckSpec:
    properties:
      duration:
        description: |-
          Duration defines the duration of the whole status check if the
          number of failed execution does not exceed the failure threshold.
          Duration is available to both `Synchronous` and `Continuous` mode.
          A duration string is a possibly signed sequence of
          decimal numbers, each with optional fraction and a unit suffix,
          such as "300ms", "-1.5h" or "2h45m".
          Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
          +optional
        type: string
      failureThreshold:
        description: |-
          FailureThreshold defines the minimum consecutive failure
          for the status check to be considered failed.
          +optional
          +kubebuilder:default=3
          +kubebuilder:validation:Minimum=1
        type: integer
      http:
        $ref: '#/definitions/v1alpha1.HTTPStatusCheck'
        description: +optional
      intervalSeconds:
        description: |-
          IntervalSeconds defines how often (in seconds) to perform
          an execution of status check.
          +optional
          +kubebuilder:default=10
          +kubebuilder:validation:Minimum=1
        type: integer
      mode:
        description: |-
          Mode defines the execution mode of the status check.
          Support type: Synchronous / Continuous
          +optional
          +kubebuilder:validation:Enum=Synchronous;Continuous
        type: string
      recordsHistoryLimit:
        description: |-
          RecordsHistoryLimit defines the number of record to retain.
          +optional
          +kubebuilder:default=100
          +kubebuilder:validation:Minimum=1
          +kubebuilder:validation:Maximum=1000
        type: integer
      successThreshold:
        description: |-
          SuccessThreshold defines the minimum consecutive successes
          for the status check to be considered successful.
          SuccessThreshold only works for `Synchronous` mode.
          +optional
          +kubebuilder:default=1
          +kubebuilder:validation:Minimum=1
        type: integer
      timeoutSeconds:
        description: |-
          TimeoutSeconds defines the number of seconds after which
          an execution of status check times out.
          +optional
          +kubebuilder:default=1
          +kubebuilder:validation:Minimum=1
        type: integer
      type:
        description: |-
          Type defines the specific status check type.
          Support type: HTTP
          +kubebuilder:default=HTTP
          +kubebuilder:validation:Enum=HTTP
        type: string
    type: object
  v1alpha1.StatusCheckTemplate:
    properties:
      duration:
        description: |-
          Duration defines the duration of the whole status check if the
          number of failed execution does not exceed the failure threshold.
          Duration is available to both `Synchronous` and `Continuous` mode.
          A duration string is a possibly signed sequence of
          decimal numbers, each with optional fraction and a unit suffix,
          such as "300ms", "-1.5h" or "2h45m".
          Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
          +optional
        type: string
      failureThreshold:
        description: |-
          FailureThreshold defines the minimum consecutive failure
          for the status check to be considered failed.
          +optional
          +kubebuilder:default=3
          +kubebuilder:validation:Minimum=1
        type: integer
      http:
        $ref: '#/definitions/v1alpha1.HTTPStatusCheck'
        description: +optional
      intervalSeconds:
        description: |-
          IntervalSeconds defines how often (in seconds) to perform
          an execution of status check.
          +optional
          +kubebuilder:default=10
          +kubebuilder:validation:Minimum=1
        type: integer
      mode:
        description: |-
          Mode defines the execution mode of the status check.
          Support type: Synchronous / Continuous
          +optional
          +kubebuilder:validation:Enum=Synchronous;Continuous
        type: string
      recordsHistoryLimit:
        description: |-
          RecordsHistoryLimit defines the number of record to retain.
          +optional
          +kubebuilder:default=100
          +kubebuilder:validation:Minimum=1
          +kubebuilder:validation:Maximum=1000
        type: integer
      successThreshold:
        description: |-
          SuccessThreshold defines the minimum consecutive successes
          for the status check to be considered successful.
          SuccessThreshold only works for `Synchronous` mode.
          +optional
          +kubebuilder:default=1
          +kubebuilder:validation:Minimum=1
        type: integer
      timeoutSeconds:
        description: |-
          TimeoutSeconds defines the number of seconds after which
          an execution of status check times out.
          +optional
          +kubebuilder:default=1
          +kubebuilder:validation:Minimum=1
        type: integer
      type:
        description: |-
          Type defines the specific status check type.
          Support type: HTTP
          +kubebuilder:default=HTTP
          +kubebuilder:validation:Enum=HTTP
        type: string
    type: object
  v1alpha1.StressCPUSpec:
    properties:
      load:
        description: specifies P percent loading per CPU worker. 0 is effectively
          a sleep (no load) and 100 is full loading.
        type: integer
      options:
        description: extend stress-ng options
        items:
          type: string
        type: array
      workers:
        description: specifies N workers to apply the stressor.
        type: integer
    type: object
  v1alpha1.StressChaosSpec:
    properties:
      containerNames:
        description: |-
          ContainerNames indicates list of the name of affected container.
          If not set, the first container will be injected
          +optional
        items:
          type: string
        type: array
      duration:
        description: |-
          Duration represents the duration of the chaos action
          +optional
        type: string
      mode:
        description: |-
          Mode defines the mode to run chaos action.
          Supported mode: one / all / fixed / fixed-percent / random-max-percent
          +kubebuilder:validation:Enum=one;all;fixed;fixed-percent;random-max-percent
        type: string
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      selector:
        $ref: '#/definitions/v1alpha1.PodSelectorSpec'
        description: Selector is used to select pods that are used to inject chaos
          action.
      stressngStressors:
        description: |-
          StressngStressors defines plenty of stressors just like `Stressors` except that it's an experimental
          feature and more powerful. You can define stressors in `stress-ng` (see also `man stress-ng`) dialect,
          however not all of the supported stressors are well tested. It maybe retired in later releases. You
          should always use `Stressors` to define the stressors and use this only when you want more stressors
          unsupported by `Stressors`. When both `StressngStressors` and `Stressors` are defined, `StressngStressors`
          wins.
          +optional
        type: string
      stressors:
        $ref: '#/definitions/v1alpha1.Stressors'
        description: |-
          Stressors defines plenty of stressors supported to stress system components out.
          You can use one or more of them to make up various kinds of stresses. At least
          one of the stressors should be specified.
          +optional
      value:
        description: |-
          Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.
          If `FixedMode`, provide an integer of pods to do chaos action.
          If `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.
          IF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
          +optional
        type: string
    type: object
  v1alpha1.StressMemorySpec:
    properties:
      options:
        description: extend stress-ng options
        items:
          type: string
        type: array
      size:
        description: |-
          specifies N bytes consumed per vm worker, default is the total available memory.
          One can specify the size as % of total available memory or in units of B, KB/KiB, MB/MiB, GB/GiB, TB/TiB..
        type: string
    type: object
  v1alpha1.Stressors:
    properties:
      cpu:
        $ref: '#/definitions/v1alpha1.CPUStressor'
        description: |-
          CPUStressor stresses CPU out
          +optional
      memory:
        $ref: '#/definitions/v1alpha1.MemoryStressor'
        description: |-
          MemoryStressor stresses virtual memory out
          +optional
    type: object
  v1alpha1.Task:
    properties:
      container:
        $ref: '#/definitions/v1.Container'
        description: Container is the main container image to run in the pod
      volumes:
        description: |-
          Volumes is a list of volumes that can be mounted by containers in a template.
          +patchStrategy=merge
          +patchMergeKey=name
        items:
          $ref: '#/definitions/v1.Volume'
        type: array
    type: object
  v1alpha1.Template:
    properties:
      abortWithStatusCheck:
        description: |-
          AbortWithStatusCheck describe whether to abort the workflow when the failure threshold of StatusCheck is exceeded.
          Only used when Type is TypeStatusCheck.
          +optional
        type: boolean
      awsChaos:
        $ref: '#/definitions/v1alpha1.AWSChaosSpec'
        description: +optional
      azureChaos:
        $ref: '#/definitions/v1alpha1.AzureChaosSpec'
        description: +optional
      blockChaos:
        $ref: '#/definitions/v1alpha1.BlockChaosSpec'
        description: +optional
      children:
        description: |-
          Children describes the children steps of serial or parallel node. Only used when Type is TypeSerial or TypeParallel.
          +optional
        items:
          type: string
        type: array
      conditionalBranches:
        description: |-
          ConditionalBranches describes the conditional branches of custom tasks. Only used when Type is TypeTask.
          +optional
        items:
          $ref: '#/definitions/v1alpha1.ConditionalBranch'
        type: array
      deadline:
        description: +optional
        type: string
      dnsChaos:
        $ref: '#/definitions/v1alpha1.DNSChaosSpec'
        description: +optional
      gcpChaos:
        $ref: '#/definitions/v1alpha1.GCPChaosSpec'
        description: +optional
      httpChaos:
        $ref: '#/definitions/v1alpha1.HTTPChaosSpec'
        description: +optional
      ioChaos:
        $ref: '#/definitions/v1alpha1.IOChaosSpec'
        description: +optional
      jvmChaos:
        $ref: '#/definitions/v1alpha1.JVMChaosSpec'
        description: +optional
      kernelChaos:
        $ref: '#/definitions/v1alpha1.KernelChaosSpec'
        description: +optional
      name:
        type: string
      networkChaos:
        $ref: '#/definitions/v1alpha1.NetworkChaosSpec'
        description: +optional
      physicalmachineChaos:
        $ref: '#/definitions/v1alpha1.PhysicalMachineChaosSpec'
        description: +optional
      podChaos:
        $ref: '#/definitions/v1alpha1.PodChaosSpec'
        description: +optional
      schedule:
        $ref: '#/definitions/v1alpha1.ChaosOnlyScheduleSpec'
        description: |-
          Schedule describe the Schedule(describing scheduled chaos) to be injected with chaos nodes. Only used when Type is TypeSchedule.
          +optional
      statusCheck:
        $ref: '#/definitions/v1alpha1.StatusCheckSpec'
        description: |-
          StatusCheck describe the behavior of StatusCheck. Only used when Type is TypeStatusCheck.
          +optional
      stressChaos:
        $ref: '#/definitions/v1alpha1.StressChaosSpec'
        description: +optional
      task:
        $ref: '#/definitions/v1alpha1.Task'
        description: |-
          Task describes the behavior of the custom task. Only used when Type is TypeTask.
          +optional
      templateType:
        type: string
      timeChaos:
        $ref: '#/definitions/v1alpha1.TimeChaosSpec'
        description: +optional
    type: object
  v1alpha1.TimeChaosSpec:
    properties:
      clockIds:
        description: |-
          ClockIds defines all affected clock id
          All available options are ["CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID",
          "CLOCK_MONOTONIC_RAW","CLOCK_REALTIME_COARSE","CLOCK_MONOTONIC_COARSE","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM",
          "CLOCK_BOOTTIME_ALARM"]
          Default value is ["CLOCK_REALTIME"]
        items:
          type: string
        type: array
      containerNames:
        description: |-
          ContainerNames indicates list of the name of affected container.
          If not set, the first container will be injected
          +optional
        items:
          type: string
        type: array
      duration:
        description: Duration represents the duration of the chaos action
        type: string
      mode:
        description: |-
          Mode defines the mode to run chaos action.
          Supported mode: one / all / fixed / fixed-percent / random-max-percent
          +kubebuilder:validation:Enum=one;all;fixed;fixed-percent;random-max-percent
        type: string
      remoteCluster:
        description: |-
          RemoteCluster represents the remote cluster where the chaos will be deployed
          +optional
        type: string
      selector:
        $ref: '#/definitions/v1alpha1.PodSelectorSpec'
        description: Selector is used to select pods that are used to inject chaos
          action.
      timeOffset:
        description: |-
          TimeOffset defines the delta time of injected program. It's a possibly signed sequence of decimal numbers, such as
          "300ms", "-1.5h" or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
        type: string
      value:
        description: |-
          Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.
          If `FixedMode`, provide an integer of pods to do chaos action.
          If `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.
          IF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
          +optional
        type: string
    type: object
  v1alpha1.Timespec:
    properties:
      nsec:
        type: integer
      sec:
        type: integer
    type: object
  v1alpha1.UserDefinedSpec:
    properties:
      attackCmd:
        description: The command to be executed when attack
        type: string
      recoverCmd:
        description: The command to be executed when recover
        type: string
    type: object
  v1alpha1.VMSpec:
    properties:
      vm-name:
        description: The name of the VM to be injected
        type: string
    type: object
  v1alpha1.Workflow:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          Finalizers may be processed and removed in any order.  Order is NOT enforced
          because it introduces significant risk of stuck finalizers.
          finalizers is a shared field, any actor with permission can reorder it.
          If the finalizer list is processed in order, then this can lead to a situation
          in which the component responsible for the first finalizer in the list is
          waiting for a signal (field value, external system, or other) produced by a
          component responsible for a finalizer later in the list, resulting in a deadlock.
          Without enforced ordering finalizers are free to order amongst themselves and
          are not vulnerable to ordering changes in the list.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will return a 409.

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
          +optional
        type: object
      managedFields:
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          +optional
        items:
          $ref: '#/definitions/v1.ManagedFieldsEntry'
        type: array
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1alpha1.WorkflowSpec'
        description: Spec defines the behavior of a workflow
      status:
        $ref: '#/definitions/v1alpha1.WorkflowStatus'
        description: |-
          +optional
          Most recently observed status of the workflow
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
          +optional
        type: string
    type: object
  v1alpha1.WorkflowCondition:
    properties:
      reason:
        type: string
      startTime:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  v1alpha1.WorkflowSpec:
    properties:
      entry:
        type: string
      templates:
        items:
          $ref: '#/definitions/v1alpha1.Template'
        type: array
    type: object
  v1alpha1.WorkflowStatus:
    properties:
      conditions:
        description: |-
          Represents the latest available observations of a workflow's current state.
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1alpha1.WorkflowCondition'
        type: array
      endTime:
        description: +optional
        type: string
      entryNode:
        description: +optional
        type: string
      startTime:
        description: +optional
        type: string
    type: object
info:
  contact:
    name: GitHub Issues
    url: https://github.com/chaos-mesh/chaos-mesh/issues
  description: Swagger for Chaos Mesh Dashboard. If you encounter any problems with
    API, please click on the issues link below to report.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Chaos Mesh Dashboard API
  version: "2.5"
paths:
  /archives:
    delete:
      description: Delete the specified archived experiment.
      parameters:
      - description: uids
        in: query
        name: uids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Delete the specified archived experiment.
      tags:
      - archives
    get:
      description: Get archived chaos experiments.
      parameters:
      - description: namespace
        in: query
        name: namespace
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: kind
        enum:
        - PodChaos
        - IOChaos
        - NetworkChaos
        - TimeChaos
        - KernelChaos
        - StressChaos
        in: query
        name: kind
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Archive'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get archived chaos experiments.
      tags:
      - archives
  /archives/{uid}:
    delete:
      description: Delete the specified archived experiment.
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Delete the specified archived experiment.
      tags:
      - archives
    get:
      description: Get the archived chaos experiment's detail by uid.
      parameters:
      - description: the archive uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ArchiveDetail'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get an archived chaos experiment.
      tags:
      - archives
  /archives/schedules:
    delete:
      description: Delete the specified archived schedule.
      parameters:
      - description: uids
        in: query
        name: uids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Delete the specified archived schedule.
      tags:
      - archives
    get:
      description: Get archived schedule experiments.
      parameters:
      - description: namespace
        in: query
        name: namespace
        type: string
      - description: name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Archive'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get archived schedule experiments.
      tags:
      - archives
  /archives/schedules/{uid}:
    delete:
      description: Delete the specified archived schedule.
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Delete the specified archived schedule.
      tags:
      - archives
    get:
      description: Get the detail of an archived schedule experiment.
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ArchiveDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get the detail of an archived schedule experiment.
      tags:
      - archives
  /archives/workflows:
    delete:
      description: Delete the specified archived workflows.
      parameters:
      - description: uids
        in: query
        name: uids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Delete the specified archived workflows.
      tags:
      - archives
    get:
      description: Get archived workflow.
      parameters:
      - description: namespace
        in: query
        name: namespace
        type: string
      - description: name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Archive'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get archived workflow.
      tags:
      - archives
  /archives/workflows/{uid}:
    delete:
      description: Delete the specified archived workflow.
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Delete the specified archived workflow.
      tags:
      - archives
    get:
      description: Get the detail of an archived workflow.
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ArchiveDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get the detail of an archived workflow.
      tags:
      - archives
  /common/annotations:
    get:
      description: Get the annotations of the pods in the specified namespace from
        Kubernetes cluster.
      parameters:
      - description: The pod's namespace list, split by ,
        in: query
        name: podNamespaceList
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.MapStringSliceResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get the annotations of the pods in the specified namespace from Kubernetes
        cluster.
      tags:
      - common
  /common/chaos-available-namespaces:
    get:
      description: Get all namespaces which could inject chaos(explosion scope) from
        Kubernetes cluster.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get all namespaces which could inject chaos(explosion scope) from Kubernetes
        cluster.
      tags:
      - common
  /common/config:
    get:
      description: Get the config of Dashboard.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.ChaosDashboardConfig'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get the config of Dashboard.
      tags:
      - common
  /common/kinds:
    get:
      description: Get all chaos kinds from Kubernetes cluster.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get all chaos kinds from Kubernetes cluster.
      tags:
      - common
  /common/labels:
    get:
      description: Get the labels of the pods in the specified namespace from Kubernetes
        cluster.
      parameters:
      - description: The pod's namespace list, split by ,
        in: query
        name: podNamespaceList
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.MapStringSliceResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get the labels of the pods in the specified namespace from Kubernetes
        cluster.
      tags:
      - common
  /common/namespaces:
    get:
      deprecated: true
      description: Get all from Kubernetes cluster.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get all namespaces from Kubernetes cluster.
      tags:
      - common
  /common/physicalmachine-annotations:
    get:
      description: Get the annotations of the physicalMachines in the specified namespace
        from Kubernetes cluster.
      parameters:
      - description: The physicalMachine's namespace list, split by ,
        in: query
        name: physicalMachineNamespaceList
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.MapStringSliceResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get the annotations of the physicalMachines in the specified namespace
        from Kubernetes cluster.
      tags:
      - common
  /common/physicalmachine-labels:
    get:
      description: Get the labels of the physicalMachines in the specified namespace
        from Kubernetes cluster.
      parameters:
      - description: The physicalMachine's namespace list, split by ,
        in: query
        name: physicalMachineNamespaceList
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.MapStringSliceResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get the labels of the physicalMachines in the specified namespace from
        Kubernetes cluster.
      tags:
      - common
  /common/physicalmachines:
    post:
      description: Get physicalMachines from Kubernetes cluster.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.PhysicalMachineSelectorSpec'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.PhysicalMachine'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get physicalMachines from Kubernetes cluster.
      tags:
      - common
  /common/pods:
    post:
      description: Get pods from Kubernetes cluster.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.PodSelectorSpec'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Pod'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get pods from Kubernetes cluster.
      tags:
      - common
  /common/rbac-config:
    get:
      description: Get the rbac config according to the user's choice.
      parameters:
      - description: The namespace of RBAC
        in: query
        name: namespace
        type: string
      - description: The role of RBAC
        in: query
        name: role
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get the rbac config according to the user's choice.
      tags:
      - common
  /events:
    get:
      description: Get events from db.
      parameters:
      - description: The create time of events
        in: query
        name: created_at
        type: string
      - description: The name of the object
        in: query
        name: name
        type: string
      - description: The namespace of the object
        in: query
        name: namespace
        type: string
      - description: The UID of the object
        in: query
        name: object_id
        type: string
      - description: kind
        enum:
        - PodChaos
        - IOChaos
        - NetworkChaos
        - TimeChaos
        - KernelChaos
        - StressChaos
        - AWSChaos
        - GCPChaos
        - DNSChaos
        - Schedule
        in: query
        name: kind
        type: string
      - description: The max length of events list
        in: query
        name: limit
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.Event'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: list events.
      tags:
      - events
  /events/{id}:
    get:
      description: Get the event from db by ID.
      parameters:
      - description: The event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get an event.
      tags:
      - events
  /events/workflow/{uid}:
    get:
      description: list all events for Workflow and related WorkflowNode.
      parameters:
      - description: The UID of the Workflow
        in: path
        name: uid
        required: true
        type: string
      - description: The namespace of the object
        in: query
        name: namespace
        type: string
      - description: The max length of events list
        in: query
        name: limit
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.Event'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: cascadeFetchEventsForWorkflow list all events for Workflow and related
        WorkflowNode.
      tags:
      - events
  /experiments:
    delete:
      description: Batch delete chaos experiments by uids.
      parameters:
      - description: 'the experiment uids, split with comma. Example: ?uids=uid1,uid2'
        in: query
        name: uids
        required: true
        type: string
      - description: force
        enum:
        - "true"
        - "false"
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Batch delete chaos experiments.
      tags:
      - experiments
    get:
      description: Get chaos experiments from k8s clusters in real time.
      parameters:
      - description: filter exps by namespace
        in: query
        name: namespace
        type: string
      - description: filter exps by name
        in: query
        name: name
        type: string
      - description: filter exps by kind
        enum:
        - PodChaos
        - NetworkChaos
        - IOChaos
        - StressChaos
        - KernelChaos
        - TimeChaos
        - DNSChaos
        - AWSChaos
        - GCPChaos
        - JVMChaos
        - HTTPChaos
        in: query
        name: kind
        type: string
      - description: filter exps by status
        enum:
        - Injecting
        - Running
        - Finished
        - Paused
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Experiment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: List chaos experiments.
      tags:
      - experiments
    post:
      consumes:
      - application/json
      description: Pass a JSON object to create a new chaos experiment. The schema
        for JSON is the same as the YAML schema for the Kubernetes object.
      parameters:
      - description: the chaos definition
        in: body
        name: chaos
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Create a new chaos experiment.
      tags:
      - experiments
  /experiments/{uid}:
    delete:
      description: Delete the chaos experiment by uid.
      parameters:
      - description: the experiment uid
        in: path
        name: uid
        required: true
        type: string
      - description: force
        enum:
        - "true"
        - "false"
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Delete a chaos experiment.
      tags:
      - experiments
    get:
      description: Get the chaos experiment's detail by uid.
      parameters:
      - description: the experiment uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ExperimentDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get a chaos experiment.
      tags:
      - experiments
  /experiments/pause/{uid}:
    put:
      description: Pause a chaos experiment.
      parameters:
      - description: the experiment uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Pause a chaos experiment.
      tags:
      - experiments
  /experiments/start/{uid}:
    put:
      description: Start a chaos experiment.
      parameters:
      - description: the experiment uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Start a chaos experiment.
      tags:
      - experiments
  /experiments/state:
    get:
      description: Get the status of all experiments.
      parameters:
      - description: namespace
        in: query
        name: namespace
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/status.AllChaosStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get the status of all experiments.
      tags:
      - experiments
  /schedules:
    delete:
      description: Batch delete schedules by uids.
      parameters:
      - description: 'the schedule uids, split with comma. Example: ?uids=uid1,uid2'
        in: query
        name: uids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Batch delete schedules.
      tags:
      - schedules
    get:
      description: Get chaos schedules from k8s cluster in real time.
      parameters:
      - description: filter schedules by namespace
        in: query
        name: namespace
        type: string
      - description: filter schedules by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Schedule'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: List chaos schedules.
      tags:
      - schedules
    post:
      consumes:
      - application/json
      description: Pass a JSON object to create a new schedule. The schema for JSON
        is the same as the YAML schema for the Kubernetes object.
      parameters:
      - description: the schedule definition
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.Schedule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1alpha1.Schedule'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Create a new schedule.
      tags:
      - schedules
  /schedules/{uid}:
    delete:
      description: Delete the schedule by uid.
      parameters:
      - description: the schedule uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Delete a schedule.
      tags:
      - schedules
    get:
      description: Get the schedule's detail by uid.
      parameters:
      - description: the schedule uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ScheduleDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get a schedule.
      tags:
      - schedules
  /schedules/pause/{uid}:
    put:
      description: Pause a schedule.
      parameters:
      - description: the schedule uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Pause a schedule.
      tags:
      - schedules
  /schedules/start/{uid}:
    put:
      description: Start a schedule.
      parameters:
      - description: the schedule uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Start a schedule.
      tags:
      - schedules
  /templates/statuschecks:
    get:
      description: Get status check templates from k8s cluster in real time.
      parameters:
      - description: filter status check templates by namespace
        in: query
        name: namespace
        type: string
      - description: filter status check templates by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.StatusCheckTemplateBase'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: List status check templates.
      tags:
      - template
    post:
      consumes:
      - application/json
      description: Pass a JSON object to create a new status check template.
      parameters:
      - description: the status check definition
        in: body
        name: statuscheck
        required: true
        schema:
          $ref: '#/definitions/types.StatusCheckTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.StatusCheckTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Create a new status check template.
      tags:
      - templates
  /templates/statuschecks/statuscheck:
    delete:
      description: Delete the status check template by namespaced name.
      parameters:
      - description: the namespace of status check templates
        in: query
        name: namespace
        required: true
        type: string
      - description: the name of status check templates
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Delete a status check template.
      tags:
      - templates
    get:
      description: Get the status check template's detail by namespaced name.
      parameters:
      - description: the namespace of status check templates
        in: query
        name: namespace
        required: true
        type: string
      - description: the name of status check templates
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.StatusCheckTemplateDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get a status check template.
      tags:
      - templates
    put:
      description: Update a status check template by namespaced name.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.StatusCheckTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.StatusCheckTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Update a status check template.
      tags:
      - templates
  /workflows:
    get:
      description: List workflows from Kubernetes cluster.
      parameters:
      - description: namespace, given empty string means list from all namespace
        in: query
        name: namespace
        type: string
      - description: status
        enum:
        - Initializing
        - Running
        - Errored
        - Finished
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.WorkflowMeta'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: List workflows from Kubernetes cluster.
      tags:
      - workflows
    post:
      description: Create a new workflow.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.Workflow'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.WorkflowDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Create a new workflow.
      tags:
      - workflows
  /workflows/{uid}:
    delete:
      description: Delete the specified workflow.
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Delete the specified workflow.
      tags:
      - workflows
    get:
      description: Get detailed information about the specified workflow. If that
        object is not existed in kubernetes, it will only return ths persisted data
        in the database.
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.WorkflowDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Get detailed information about the specified workflow.
      tags:
      - workflows
    put:
      description: Update a workflow.
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.Workflow'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.WorkflowDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Update a workflow.
      tags:
      - workflows
  /workflows/parse-task/http:
    post:
      description: Parse the rendered task back to the original request
      parameters:
      - description: Rendered Task
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.Template'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/curl.RequestForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Parse the rendered task back to the original request
      tags:
      - workflows
  /workflows/render-task/http:
    post:
      description: Render a task which sends HTTP request
      parameters:
      - description: Origin HTTP Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/curl.RequestForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1alpha1.Template'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Render a task which sends HTTP request
      tags:
      - workflows
  /workflows/validate-task/http:
    post:
      description: Validate the given template is a valid rendered HTTP Task
      parameters:
      - description: Rendered Task
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.Template'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIError'
      summary: Validate the given template is a valid rendered HTTP Task
      tags:
      - workflows
swagger: "2.0"
